/* ------------------------------------------------------------------------------

*  Datatables data sources
*
*  @Kardiwan <kardiwan@gmail.com>
*
* ---------------------------------------------------------------------------- */

$(function() {

    // Table setup
    // ------------------------------

    // Setting datatable defaults
    $.extend( $.fn.dataTable.defaults, {
        autoWidth: false,
        columnDefs: [{ 
            //orderable: false,
            //width: '100px',
            //targets: [ 5 ]
        }],
        dom: '<"datatable-header"fl><"datatable-scroll"t><"datatable-footer"ip>',
        language: {
            search: '<span>Filter:</span> _INPUT_',
            lengthMenu: '<span>Show:</span> _MENU_',
            paginate: { 'first': 'First', 'last': 'Last', 'next': '&rarr;', 'previous': '&larr;' }
        },
        drawCallback: function () {
            $(this).find('tbody tr').slice(-3).find('.dropdown, .btn-group').addClass('dropup');
        },
        preDrawCallback: function() {
            $(this).find('tbody tr').slice(-3).find('.dropdown, .btn-group').removeClass('dropup');
        }
    });


    // Project list - datatable
   $('.datatable-projects-list').dataTable({
        processing: true,
        serverSide: true,
        ajax: {
            "url": JS_BASE_URL + "/planning/dataTableProjectList",
            "type": "POST"
        },
        columnDefs: [
            {
                render: function (data, type, row) {
                    var bgColor = ['bg-teal-400', 'bg-warning-400', 'bg-blue', 'bg-success-400', 'bg-pink-400', 'bg-brown-400'];
                    var rand = bgColor[Math.floor(Math.random() * bgColor.length)];

                    return '<div class="media-left media-middle">' +
                        '<a href="' + JS_BASE_URL + '/projects/id/' + row.id + '" class="btn ' + rand + ' btn-rounded btn-icon btn-xs">' +
                        '<span class="letter-icon">' + data.substr(0,1) + '</span>' +
                        '</a>' +
                        '</div>' +
                        '<div class="media-body">' +
                        '<a href="' + JS_BASE_URL + '/planning/id/' + row.id + '" class="display-inline-block text-default text-semibold letter-icon-title">' + data + '</a>' +
                        '<div class="text-muted text-size-small"><span class="status-mark border-success position-left"></span>' + row.company + '</div>' +
                        '</div>';
                },
                orderable: false,
                targets: 0
            },
            {
                render: function (data, type, row) {
                    if (row.start_date == null){
                        row.start_date = "-";
                    }

                    if (row.description == null){
                        row.description = "-";
                    }

                    if (row.description.length >= 25){
                        row.description = row.description.substring(0, 20)+"...";
                    }
                    return '<div class = "display-inline-block text-default letter-icon-title">' + row.description + '</div>';
                },
                orderable: false,
                targets: 1
            },
            {
                render: function (data, type, row) {
                    if (row.start_date == null){
                        row.start_date = "-"
                    }
                    return '<div class = "display-inline-block text-default text-semibold letter-icon-title">' + row.customer + '</div>';
                },
                orderable: false,
                targets: 2
            },
            {
                render: function (data, type, row) {
                    if (row.end_date == null){
                        row.end_date = "-"
                    }
                    return '<div class = "display-inline-block text-default text-semibold letter-icon-title">' + row.scope + '</div>';
                },
                targets: 3
            },
            {
                visible: false,
                targets: 4
            },
            {
                visible: false,
                targets: 5
            },
            {
                visible: false,
                targets: 6
            },
            {
                render : function(data, type, row){
                   var action_menu = '<ul class="icons-list">' +
                       '<li class="dropdown">' +
                       '<a href="#" class="dropdown-toggle" data-toggle="dropdown"><i class="icon-menu7"></i></a>' +
                       '<ul class="dropdown-menu dropdown-menu-right">' +
                       //'<li><a href="#" target="_blank"><i class="icon-clipboard3"></i> Application form</a></li>' +
                           // '<li><a class = "assign" data-id = "'+row.emp_requisition_id+'" candidate_id = "'+row.candidate_id+'"><i class="icon-users2"></i> Assign Inteviewer</li>'
                       '<li><a class = "edit_project" project_id = "'+row['id']+'"><i class="icon-pencil5"></i>Edit Project</a></li>' +
                       '</ul>' +
                       '</li>' +
                       '</ul>';
                   return action_menu;
               },
                orderable: false,
                targets: 7

            }
        ],
        //dom: '<"datatable-scroll"t><"datatable-footer"ip>',
        order: [0, "desc"],
        columns: [
            { data: "project_name" },
            { data: "description" },
            { data: "company" },
            { data: "team" },
            { data: "customer" },
            { data: "scope" },
            { data: "category" },
            { data: "id" }
        ],
        fnDrawCallback : function() {
            CallbackProject();
            /*this.api().on('draw', function() {
             CallbackMilestone();
             });*/
        }

    });

    var project_id = $('#project_id').val();
    $('.datatable-milestone-list').dataTable({
        processing: true,
        serverSide: true,
        ajax: {
            "url": JS_BASE_URL + "/planning/dataTableMilestone/"+project_id,
            "type": "POST"
        },
        columnDefs: [
            /*{
                render: function (data, type, row) {

                     return '<div class="checkbox"><input type="checkbox" class="styled"></div>';
                },
                orderable: false,
                targets: 0
            },*/
            {
                render: function (data, type, row) {

                    return '<h6 class="text-default"> ' + row.a.milestone_name + '</h6>'+
                    '<div class="text-muted text-size-small"><i class="icon-calendar2 position-left"></i> ' + row.a.due_date+ '</div>';
                },
                orderable: false,
                targets: 0
            },
            {
                 render: function (data, type, row) {

                    return '<span class="text-size-small text-default">' + row.b.fullname + '</span>';
                },
                orderable: false,
                targets: 1
            },
            {
                visible: false,
                targets: 2
            },
            {
                visible: false,
                targets: 3
            },
            {
                visible: false,
                targets: 4
            },
            {
                visible: false,
                targets: 5
            },
            {
                visible: false,
                targets: 6
            },
            {

                render: function (data, type, row) {
                    var action_menu = '<ul class="icons-list">' +
                        '<li class="dropdown">' +
                        '<a href="#" class="dropdown-toggle" data-toggle="dropdown"><i class="icon-menu7"></i></a>' +
                        '<ul class="dropdown-menu dropdown-menu-right">' +
                        '<li><a href="#" class = "attach_tasklist" project_id = "'+project_id+'" ><i class="icon-attachment"></i>Attach a tasklist</a></li>' +
                        '<li><a href="#" class = "edit_milestone" milestone_id="'+row.a.id+'"><i class="icon-pencil6"></i>Edit Milestone</a></li>' +
                        '</ul>' +
                        '</li>' +
                        '</ul>';
                    return action_menu;
                },
                orderable: false,
                visible: true,
                targets: 7
            }
        ],
        order: [1, "desc"],
        columns: [
            { data: "a.milestone_name" },
            { data: "a.due_date" },
            { data: "a.description" },
            { data: "a.responsible_to" },
            { data: "a.can_see_it" },
            { data: "a.should_follow_it" },
            { data: "b.fullname" },
            { data: "a.id" }
        ],
        fnDrawCallback : function() {
            CallbackMilestone();
            /*this.api().on('draw', function() {
                CallbackMilestone();
            });*/
        }

    });

   $('.datatable-task-list').dataTable({
        processing: true,
        serverSide: true,
        ajax: {
            "url": JS_BASE_URL + "/projects/dataTableTaskList/"+project_id,
            "type": "POST"
        },
        columnDefs: [
            /*{
                render: function (data, type, row) {

                     return '<div class="checkbox"><input type="checkbox" class="styled"></div>';
                },
                orderable: false,
                targets: 0
            },*/
            /*{
                searchable: false,
                visible: true,
                targets: 0
            },*/
            {
                render: function (data, type, row) {

                    return '<h6 class="text-default"> ' + row.a.tasks_name + '</h6>';
                },
                orderable: false,
                targets: 0
            },
            {
                render: function (data, type, row) {

                    return '<span class="text-size-small text-default">Test</span>';
                },
                orderable: false,
                targets: 1
            },
            {
                visible: true,
                targets: 2
            },
            {
                visible: true,
                targets: 3
            },
            {
                visible: true,
                targets: 4
            },
            {
                visible: false,
                targets: 5
            },
            {
                visible: false,
                targets: 6
            },
            {

                render: function (data, type, row) {
                    var action_menu = '<ul class="icons-list">' +
                        '<li class="dropdown">' +
                        '<a href="#" class="dropdown-toggle" data-toggle="dropdown"><i class="icon-menu7"></i></a>' +
                        '<ul class="dropdown-menu dropdown-menu-right">' +
                        '<li><a href="#" class = "attach_tasklist" project_id = "'+project_id+'"><i class="icon-attachment"></i>Attach a tasklist</a></li>' +
                        '<li><a href="#"><i class="edit_milestone icon-attachment" milestone_id = "'+row.id+'"></i>Edit Milestone</a></li>' +
                        '</ul>' +
                        '</li>' +
                        '</ul>';
                    return action_menu;
                },
                orderable: false,
                visible: true,
                targets: 7
            }
        ],
        //dom: '<"datatable-scroll"t><"datatable-footer"ip>',
        order: [1, "desc"],
        columns: [
            /*{
                className:      'details-control',
                orderable:      false,
                data:           null,
                defaultContent: ''
            },*/
            { data: "a.id" },
            { data: "b.task_list_name" },
            { data: "b.id" },
            { data: "a.projects_id" },
            { data: "b.milestone_id" },
            { data: "a.tasks_name" },
            { data: "d.name" },
            { data: "d.id" }
        ],
        fnDrawCallback : function() {
            callBackTaskList();
            /*this.api().on('draw', function() {
                CallbackMilestone();
            });*/
            var api = this.api();
            var rows = api.rows( {page:'current'} ).nodes();
            var last=null;
 
            api.column(1, {page:'current'} ).data().each( function ( group, i ) {
                if ( last !== group ) {
                    $(rows).eq( i ).before(
                        '<tr class="group"><td colspan="7">'+group+'</td></tr>'
                    );
 
                    last = group;
                }
            } );
        }

    });

    $('.datatable-people-list').dataTable({
        processing: true,
        serverSide: true,
        ajax: {
            "url": JS_BASE_URL + "/planning/dataTablePeople/"+project_id,
            "type": "POST"
        },
        columnDefs: [
            {
                render: function (data, type, row) {

                    return '<span class="text-size-small text-default"> ' + row.b.fullname + '</span>';
                },
                orderable: false,
                targets: 0
            },
            {
                 render: function (data, type, row) {

                    return '<span class="text-size-small text-default">' + row.b.email + '</span>';
                },
                orderable: false,
                targets: 1
            },
            {
                render: function (data, type, row) {

                    return '<span class="text-size-small text-default"> </span>';
                },
                orderable: false,
                targets: 2
            },
            {
                visible: false,
                targets: 3
            },
            {
                visible: false,
                targets: 4
            },
            /*{
                visible: false,
                targets: 5
            },
            {
                visible: false,
                targets: 6
            },
            {
                visible: false,
                targets: 7
            }*/
        ],
        //dom: '<"datatable-scroll"t><"datatable-footer"ip>',
        order: [0, "desc"],
        columns: [
            { data: "a.id" },
            { data: "b.fullname" },
            { data: "b.email" },
            { data: "b.role_id" },
            { data: "b.active" },
        ]

    });


    $('.datatable-role-list').dataTable({
        processing: true,
        serverSide: true,
        ajax: {
            "url": JS_BASE_URL + "/administration/datatableRole/",
            "type": "POST"
        },
        columnDefs: [
            /*{
             render: function (data, type, row) {

             return '<div class="checkbox"><input type="checkbox" class="styled"></div>';
             },
             orderable: false,
             targets: 0
             },*/
            {
                render: function (data, type, row) {

                    return '<div class="text-muted text-size-small"></i> ' + row.no+ '</div>';
                },
                orderable: false,
                targets: 0
            },
            {
                render: function (data, type, row) {

                    return '<span class="text-size-small text-default">' + row.role_name + '</span>';
                },
                orderable: false,
                targets: 1
            },
            {

                render: function (data, type, row) {
                    var action_menu = '<ul class="icons-list">' +
                        '<li class="dropdown">' +
                        '<a href="#" class="dropdown-toggle" data-toggle="dropdown"><i class="icon-menu7"></i></a>' +
                        '<ul class="dropdown-menu dropdown-menu-right">' +
                        '<li><a href="/administration/rolePermissions/'+row.id+'" class = "attach_tasklist" ><i class="icon-user-lock"></i>Role Permission</a></li>' +
                        '</ul>' +
                        '</li>' +
                        '</ul>';
                    return action_menu;
                },
                orderable: false,
                visible: true,
                targets: 2
            }
        ],
        order: [1, "desc"],
        columns: [
            { data: "id" },
            { data: "role_name" },
        ],
        fnDrawCallback : function() {
        }

    });

    $('.datatable-permission-list').dataTable({
        processing: true,
        serverSide: true,
        ajax: {
            "url": JS_BASE_URL + "/administration/datatablePermission/",
            "type": "POST"
        },
        columnDefs: [
            /*{
             render: function (data, type, row) {

             return '<div class="checkbox"><input type="checkbox" class="styled"></div>';
             },
             orderable: false,
             targets: 0
             },*/
            {
                render: function (data, type, row) {

                    return '<div class="text-size-small"></i> ' + row.name+ '</div>';
                },
                orderable: false,
                targets: 0
            },
            {
                render: function (data, type, row) {

                    return '<span class="text-size-small text-default">' + row.description + '</span>';
                },
                orderable: false,
                targets: 1
            },
            {
                render: function (data, type, row) {

                    return '<span class="text-size-small text-default">' + row.menu_name + '</span>';
                },
                orderable: false,
                targets: 2
            },
            {
                visible: false,
                targets: 3
            },
            {
                visible: false,
                targets: 4
            },
            {
                visible: false,
                targets: 5
            },
            {
                visible: false,
                targets: 6
            },
            {

                render: function (data, type, row) {
                    var action_menu = '<ul class="icons-list">' +
                        '<li class="dropdown">' +
                        '<a href="#" class="dropdown-toggle" data-toggle="dropdown"><i class="icon-menu7"></i></a>' +
                        '<ul class="dropdown-menu dropdown-menu-right">' +
                        '</ul>' +
                        '</li>' +
                        '</ul>';
                    return action_menu;
                },
                orderable: false,
                visible: true,
                targets: 7
            }
        ],
        order: [1, "desc"],
        columns: [
            { data: "name" },
            { data: "description" },
            { data: "id_permission" },
            { data: "menu_id" },
            { data: "created_at" },
            { data: "created_by" },
            { data: "updated_at" },
            { data: "created_by" }
        ],
        fnDrawCallback : function() {
            CallbackMilestone();
            /*this.api().on('draw', function() {
             CallbackMilestone();
             });*/
        }

    });

    $('.datatable-user-list').dataTable({
        processing: true,
        serverSide: true,
        ajax: {
            "url": JS_BASE_URL + "/administration/datatableUser/1",
            "type": "POST"
        },
        columnDefs: [
            {
                render: function (data, type, row) {
                    return '<span class="text-size-small text-default"> ' + row.email+ '</span>';

                },
                orderable: false,
                visible : false,
                targets: 0
            },
            {
                render: function (data, type, row) {
                    return '<span class="text-size-small text-default"> ' + row.fullname+ '</span>';

                },
                orderable: false,
                targets: 1
            },
            {
                render: function (data, type, row) {
                    return '<span class="text-size-small text-default">' + row.role_name + '</span>';
                },
                orderable: false,
                targets: 2
            },
            {

                render: function (data, type, row) {
                    var action_menu = '<ul class="icons-list">' +
                        '<li class="dropdown">' +
                        '<a href="#" class="dropdown-toggle" data-toggle="dropdown"><i class="icon-menu7"></i></a>' +
                        '<ul class="dropdown-menu dropdown-menu-right">' +
                        '<li><a href="#" class = "edit-user" user_id = "'+row.user_id+'"><i class="icon-pencil"></i>Edit User</a></li>' +
                        '</ul>' +
                        '</li>' +
                        '</ul>';
                    return action_menu;
                },
                orderable: false,
                visible: true,
                targets: 3
            }
        ],
        order: [1, "desc"],
        columns: [
            { data: "email" },
            { data: "full_name" },
            { data: "row_name" },
            { data: "user_id" },
        ],
        fnDrawCallback : function() {
            CallbackUser();
            /*this.api().on('draw', function() {
             CallbackMilestone();
             });*/
        }

    });

    $('.datatable-resource-list').dataTable({
        processing: true,
        serverSide: true,
        ajax: {
            "url": JS_BASE_URL + "/resource/datatableResource/",
            "type": "POST"
        },
        columnDefs: [
            {
                render: function (data, type, row) {
                    return '<a href="/resource/details/'+row.id+'"><span class="text-size-small text-default"> ' + row.fullname+ '</span></a>';

                },
                orderable: false,
                targets: 0
            },
            {
                render: function (data, type, row) {
                    return '<span class="text-size-small text-default"> ' + row.title+ '</span>';

                },
                orderable: false,
                targets: 1
            },
            {
                render: function (data, type, row) {
                    return '<span class="text-size-small text-default">' + row.join_date + '</span>';
                },
                orderable: false,
                targets: 2
            },
            {
                render: function (data, type, row) {
                    return '<span class="text-size-small text-default">' + row.work_location + '</span>';
                },
                orderable: false,
                targets: 3
            },
            {

                render: function (data, type, row) {
                    var action_menu = '<ul class="icons-list">' +
                        '<li class="dropdown">' +
                        '<a href="#" class="dropdown-toggle" data-toggle="dropdown"><i class="icon-menu7"></i></a>' +
                        '<ul class="dropdown-menu dropdown-menu-right">' +
                        '<li><a href="#" class = "edit-resource" res_id = "'+row.id+'"><i class="icon-pencil"></i>Edit Resource</a></li>' +
                        '</ul>' +
                        '</li>' +
                        '</ul>';
                    return action_menu;
                },
                orderable: false,
                visible: true,
                targets: 4
            }
        ],
        order: [1, "desc"],
        columns: [
            { data: "email" },
            { data: "full_name" },
            { data: "title" },
            { data: "join_date" },
            { data: "work_location" },
        ],
        fnDrawCallback : function() {
            CallbackResource();
        }

    });

    $('.datatable-resource-allocation').dataTable({
        processing: true,
        serverSide: true,
        ajax: {
            "url": JS_BASE_URL + "/resource/datatableAllocateResource/",
            "type": "POST"
        },
        columnDefs: [
            {
                render: function (data, type, row) {
                    return '<span class="text-size-small text-default"> ' + row.fullname+ '</span>';

                },
                orderable: false,
                targets: 0
            },
            {
                render: function (data, type, row) {
                    return '<span class="text-size-small text-default"> ' + row.project_name+ '</span>';

                },
                orderable: false,
                targets: 1
            },
            {

                render: function (data, type, row) {
                    var action_menu = '<ul class="icons-list">' +
                        '<li class="dropdown">' +
                        '<a href="#" class="dropdown-toggle" data-toggle="dropdown"><i class="icon-menu7"></i></a>' +
                        '<ul class="dropdown-menu dropdown-menu-right">' +
                        '<li><a href="#" class = "edit-resource" res_id = "'+row.id+'"><i class="icon-pencil"></i>Edit Resource</a></li>' +
                        '</ul>' +
                        '</li>' +
                        '</ul>';
                    return action_menu;
                },
                orderable: false,
                visible: true,
                targets: 2
            }
        ],
        order: [1, "desc"],
        columns: [
            { data: "email" },
            { data: "full_name" },
            { data: "title" },
        ],
        fnDrawCallback : function() {
            CallbackResource();
        }

    });



//==============================================================================================================

    // Javascript sourced data
    var dataSet = [
        ['Trident','Internet Explorer 4.0','Win 95+','4','X'],
        ['Trident','Internet Explorer 5.0','Win 95+','5','C'],
        ['Trident','Internet Explorer 5.5','Win 95+','5.5','A'],
        ['Trident','Internet Explorer 6','Win 98+','6','A'],
        ['Gecko','Firefox 1.0','Win 98+ / OSX.2+','1.7','A'],
        ['Gecko','Firefox 1.5','Win 98+ / OSX.2+','1.8','A'],
        ['Gecko','Firefox 2.0','Win 98+ / OSX.2+','1.8','A'],
        ['Gecko','Firefox 3.0','Win 2k+ / OSX.3+','1.9','A'],
        ['Gecko','Camino 1.0','OSX.2+','1.8','A'],
        ['Gecko','Camino 1.5','OSX.3+','1.8','A'],
        ['Webkit','Safari 1.2','OSX.3','125.5','A'],
        ['Webkit','Safari 1.3','OSX.3','312.8','A'],
        ['Webkit','Safari 2.0','OSX.4+','419.3','A'],
        ['Presto','Opera 7.0','Win 95+ / OSX.1+','-','A'],
        ['Presto','Opera 7.5','Win 95+ / OSX.2+','-','A'],
        ['Misc','NetFront 3.1','Embedded devices','-','C'],
        ['Misc','NetFront 3.4','Embedded devices','-','A'],
        ['Misc','Dillo 0.8','Embedded devices','-','X'],
        ['Misc','Links','Text only','-','X']
    ];

    $('.datatable-js').dataTable({
        data: dataSet,
        columnDefs: []
    });


    // Nested object data
    $('.datatable-nested').dataTable({
        ajax: 'assets/demo_data/tables/datatable_nested.json',
        columns: [
            {data: "name[, ]"},
            {data: "hr.0" },
            {data: "office"},
            {data: "extn"},
            {data: "hr.2"},
            {data: "hr.1"}
        ]
    });


    // Generate content for a column
    var table = $('.datatable-generated').DataTable({
        ajax: 'assets/demo_data/tables/datatable_ajax.json',
        columnDefs: [{
            targets: 2,
            data: null,
            defaultContent: "<button class='label label-default'>Show</button>"
        },
        { 
            orderable: false,
            targets: [0, 2]
        }]
    });
    
    $('.datatable-generated tbody').on('click', 'button', function () {
        var data = table.row($(this).parents('tr')).data();
        alert(data[0] +"'s location is: "+ data[ 2 ]);
    });



    // External table additions
    // ------------------------------

    // Add placeholder to the datatable filter option
    $('.dataTables_filter input[type=search]').attr('placeholder','Type to filter...');


    // Enable Select2 select for the length option
    $('.dataTables_length select').select2({
        minimumResultsForSearch: Infinity,
        width: 'auto'
    });

    
});

function CurrencyFormat(number)
{
    return (Math.round(number * 100) / 100).toLocaleString('id');
}

var CallbackMilestone = function(){
    $('.attach_tasklist').on('click', function() {
        var option = "";
        var project_id = $(this).attr('project_id');
        var milestone_id = $(this).attr('milestone_id');

        $.ajax({
            url:  JS_BASE_URL +'/projects/getTaskList',
            type : 'POST',
            dataType: 'json',
            data :{project_id : project_id},
            async: false, 
            success: function(res) {
                if(res.status == 'Success'){
                    $.each(res.data, function(i, val) {
                        option += '<option value="'+val.id+'">'+val.task_list_name+'</option> ';
                    });
                }
            }
        });
        bootbox.dialog({
                title: "Attach Task List",
                message: '<div class="row">  ' +
                            '<div class="col-md-12">' +
                            '<form action="#" id = "task_list_form">' +
                            '<div class="form-group">' +
                            '<input type = "hidden" name = "milestone_id" value = "'+milestone_id+'">'+
                            '<select name="task_list_id" data-placeholder="Select tasklist" class="select">' +
                            '<option value="">No Milestone</option>'+
                            option +
                            '</select>' +
                            '</div>' +
                            '</form>' +
                            '</div>' +
                            '</div>',
                buttons: {
                    success: {
                        label: "Attach Task List",
                        className: "btn-success",
                        callback: function () {
                            var form = $('#task_list_form');
                            $.ajax({
                                url:  JS_BASE_URL +'/projects/attachTaskList',
                                type : 'POST',
                                dataType: 'json',
                                data: form.serialize(),
                                success: function(res) {
                                    /*if(res.status == 'Success'){
                                        window.location.replace(JS_BASE_URL +'/projects/all');
                                    }*/
                                }
                            });

                        }
                    }
                }
            }
        );

        $('.select').parents('.bootbox').removeAttr('tabindex');
        $('.select').select2();

        // Single picker
        $('.daterange-single').daterangepicker({
            singleDatePicker: true,

        });
    });

    $('.edit_milestone').on('click', function() {
        var milestone_name = "", responsible_user = "", due_date = "", note = "", followers = "";
        var project = "";
        var milestone_id = $(this).attr('milestone_id');
        $.ajax({
            url:  JS_BASE_URL +'/projects/getMilestoneDetail/'+ milestone_id,
            type : 'GET',
            dataType: 'json',
            async: false,
            success: function(res) {
                if(res.status == 'Success'){
                    milestone_name = res.data[0].milestone_name;
                    responsible_user = res.data[0].responsible_to;
                    due_date = res.data[0].due_date;
                    note = res.data[0].description;
                    project = res.data[0].projects_id;
                    //console.log(res.data);
                    /*$.each(res.data, function(i, val) {
                        var slctd = "";
                        if (company2 == val.company_name) {slctd += "selected"};
                        company += '<option value="'+val.company_name+'" '+slctd+'>'+val.company_name+'</option> ';
                    });*/
                }
            }
        });
        var option = "";
        console.log(project);
        $.ajax({
                url:  JS_BASE_URL +'/planning/getPeopleInProject/'+project,
                type : 'GET',
                dataType: 'json',
                async: false,
                success: function(res) {
                if(res.status == 'Success'){
                    $.each(res.data, function(i, val) {
                        var selected = "";
                        //console.log(responsible_user);
                        //console.log(val.id);
                        if(responsible_user == val.id){
                            selected = "selected";
                        }
                        option += '<option value="'+val.id+'" '+selected+'>'+val.name+'</option> ';
                    });
                }
            }
        });
        console.log(option);
        bootbox.dialog({
                title: "Edit Milestone",
                message: '<div class="row"> ' +
                '<div class="col-md-12">' +
                '<form action="#" id = "add_milestone_form">' +
                '<div class="form-group">' +
                '<div class="row">'+
                '<div class="col-sm-12">'+
                '<label>Name the milestone</label> '+
                '<input type="text" name = "milestone" value = "'+milestone_name+'"class="form-control"> '+
                //'<input type="hidden" name = "project_id"  value = "<?php echo $project_id?>" class="form-control">' +
                '</div> '+
                '</div> '+
                '</div>'+
                '<div class="row">'+
                '<div class="col-sm-6">'+
                '<div class="form-group"> '+
                '<label>Who is responsible?</label> '+
                '<select id="country" name="asignee" data-placeholder="Anyone" class="select company">'+
                '<option value="">Anyone</option> '+
                option+
                '</select>' +
                '</div> ' +
                '</div>' +
                '<div class="col-sm-6">' +
                '<label>Due Date</label>' +
                '<div class="input-group">' +
                '<span class="input-group-addon"><i class="icon-calendar22"></i></span>' +
                '<input type="text" id = "due_date" class="form-control daterange-single" name = "milestone_due_date" placeholder="No date">' +
                '</div>' +
                '</div>' +
                '</div>' +
                '<ul class="nav nav-lg nav-tabs nav-tabs-bottom nav-tabs-toolbar no-margin">'+
                '<li class="active"><a href="#a" data-toggle="tab" aria-expanded="true">Notes</a></li>'+
                ' <li class=""><a href="#b" data-toggle="tab" aria-expanded="false">Followers</a></li>'+
                '</ul>'+
                '<div class="tab-content">'+
                '<div class="tab-pane fade active in" id="a">'+
                '<div class="form-group">'+
                '<label class = "m-10">Provide a Description (Optional):</label> '+
                '<textarea rows="4" cols="5" name = "description" placeholder="Description..." class="form-control"></textarea>'+
                '</div>'+
                '</div>'+
                '<div class="tab-pane fade" id="b">'+
                '<div class="form-group">'+
                '<label class = "m-10">Who can see it?</label>'+
                '<select data-placeholder="Select user" class="select company" multiple = "multiple">'+
                '<option value="anyone">Anyone in this project</option>'+
                '<option value="me">Me</option>'+
                '</select>'+
                '</div>'+
                '</div>'+
                '</form>' +
                '</div>' +
                '</div>',
                buttons: {
                    success: {
                        label: "Save",
                        className: "btn-success",
                        callback: function () {
                            var form = $('#add_milestone_form');
                            $.ajax({
                                url:  JS_BASE_URL +'/projects/saveMilestone',
                                type : 'POST',
                                dataType: 'json',
                                data: form.serialize(),
                                success: function(res) {
                                    var dbmil = $('.datatable-milestone-list').dataTable();
                                    if(res.status == 'Success'){
                                        dbmil.api().ajax.reload();
                                    }
                                }
                            });

                        }
                    }
                }
            }
        );

        $('.select').parents('.bootbox').removeAttr('tabindex');
        $('.select').select2();
        // Single picker
        $('.daterange-single').daterangepicker({
            singleDatePicker: true,
        });
    });
};
var callBackTaskList = function() {
    /*var table = $('.datatable-task-list').dataTable().api();
    $('.datatable-task-list tbody').on('click', 'td.details-control', function () {
        var tr = $(this).closest('tr');
        var row = table.row( tr );
 
        if ( row.child.isShown() ) {
            // This row is already open - close it
            row.child.hide();
            tr.removeClass('shown');
        }
        else {
            // Open this row
            row.child( format(row.data()) ).show();
            tr.addClass('shown');
        }
    } );
    function format ( d ) {
        return '<table cellpadding="5" cellspacing="0" border="0" style="padding-left:50px;">'+
            '<tr>'+
                '<td>Full name:</td>'+
                '<td>'+d.task_list_name+'</td>'+
            '</tr>'+
            '<tr>'+
                '<td>Extension number:</td>'+
                '<td>B</td>'+
            '</tr>'+
            '<tr>'+
                '<td>Extra info:</td>'+
                '<td>And any further details here (images etc)...</td>'+
            '</tr>'+
        '</table>';
    }*/
};


var CallbackProject = function(){
    $('.edit_project').on('click', function() {
        var option = "";
        var that = this;
        var id_project = $(this).attr('project_id');
        var project_name = "", start_date = "", end_date ="", company2 = "", description= "";
        $.ajax({
            url:  JS_BASE_URL +'/planning/getProjectDetail/'+id_project,
            type : 'GET',
            dataType: 'json',
            async: false,
            success: function(res) {
                if(res.status == 'Success'){
                    project_name = res.data[0].project_name;
                    scope = res.data[0].scope;
                    customer_name = res.data[0].customer;
                }
            }
        });
        var company = "";
        $.ajax({
            url:  JS_BASE_URL +'/planning/getCompany',
            type : 'GET',
            dataType: 'json',
            async: false,
            success: function(res) {
                if(res.status == 'Success'){
                    $.each(res.data, function(i, val) {
                        var slctd = "";
                        if (company2 == val.company_name) {slctd += "selected"};
                        company += '<option value="'+val.company_name+'" '+slctd+'>'+val.company_name+'</option>';
                    });
                }
            }
        });

        var scopes = ["Submarine", "Inland", "Civil Work", "FTTB", "FTTH"];
        var optionScope = "";
        $.each(scopes, function(i, val) {
            var selected = "";
            if (scope == val) {selected += "selected"};
            optionScope += '<option value="'+val+'" '+selected+'>'+val+'</option>';
        });
        bootbox.dialog({
                title: "Edit Project",
                message: '<div class="row">  ' +
                '<div class="col-md-12">' +
                '<form action="#" id = "edit_project_form">' +
                '<div class="form-group">' +
                '<div class="row">' +
                '<div class="col-sm-12">' +
                '<label>What\'s the Project Name?</label>' +
                '<input type="hidden" name = "project_id" value = "'+id_project+'"class="form-control">' +
                '<input type="text" placeholder="Project name" name = "project_name" value = "'+project_name+'"class="form-control">' +
                '</div>' +
                '</div>' +
                '</div>' +
                '<div class="form-group">' +
                '<div class="row">' +
                '<div class="col-sm-12">' +
                '<label>Customer</label>' +
                '<input type="text" placeholder="Customer Name" name = "customer" class="form-control" value = "'+customer_name+'">' +
                '</div>' +
                '</div>' +
                '</div>' +
                '<div class="form-group"> '+
                '<label class = "mt-10">Scope</label> '+
                '<select id="scope" name="scope" data-placeholder="Select scope" class="select"> '+
                optionScope +
                '</select> '+
                '</div> '+
                '<div class="form-group">' +
                '<div class="row">' +
                '<div class="col-sm-12">' +
                '<label>Completion</label>' +
                '<div class="col-sm-11">' +
                '<input type="text" placeholder="Project completion in percent" name = "completion" class="form-control">' +
                '</div>'+
                '<label class = "col-sm-1">%</label>'+
                '</div>' +
                '</div>' +
                '</div>' +
                '</form>' +
                '</div>' +
                '</div>',
                buttons: {
                    success: {
                        label: "Save",
                        className: "btn-success",
                        callback: function () {
                            var editProject = $('#edit_project_form');
                            var table1 = $('.datatable-projects-list').dataTable();
                            $.ajax({
                                url:  JS_BASE_URL +'/planning/editProject',
                                type : 'POST',
                                dataType: 'json',
                                data : editProject.serialize(),
                                success: function(res) {
                                    if(res.status == 'Success'){
                                        new PNotify({
                                            title: 'Success',
                                            text: 'Data has been saved',
                                            icon: 'icon-checkmark3',
                                            addclass: 'bg-success',
                                            delay: '3000'
                                        });

                                    table1.api().ajax.reload();
                                    }
                                }
                            });

                        }
                    }
                }
            }
        );

        $('.select').parents('.bootbox').removeAttr('tabindex');
        $('.select').select2();
        $("#select").select2("val", company2);

        // Single picker
        /*if(start_date != null){
            $('#start_date').daterangepicker({
                singleDatePicker: true,
                startDate: moment(start_date).format('DD-MM-YYYY'),
                locale: {
                    format: 'DD-MM-YYYY'
                },
            });
        } else {
            $('#start_date').daterangepicker({
                singleDatePicker: true,
                locale: {
                    format: 'DD-MM-YYYY'
                },
                autoUpdateInput :false
            }, function(startDate, label){
                $('#start_date').val(startDate.format('DD-MM-YYYY'));
            });
        }
        if(end_date != null){
            $('#end_date').daterangepicker({
                singleDatePicker: true,
                startDate: moment(end_date).format('DD-MM-YYYY'),
                locale: {
                    format: 'DD-MM-YYYY'
                },
            });
        } else {
            $('#end_date').daterangepicker({
                singleDatePicker: true,
                locale: {
                    format: 'DD-MM-YYYY'
                },
                autoUpdateInput :false
            }, function(startDate, label){
                $('#end_date').val(startDate.format('DD-MM-YYYY'));
            });
        }*/


    });
};
var CallbackUser = function(){
    $('.edit-user').on('click', function() {
        var option = "";
        var that = this;
        var userId = $(this).attr('user_id');
        var name = "", email = "", role_id ="";
        $.ajax({
            url:  JS_BASE_URL +'/administration/userDetail/'+userId,
            type : 'GET',
            dataType: 'json',
            async: false,
            success: function(res) {
                if(res.status == 'success'){
                    name = res.data['fullname'];
                    email = res.data['email'];
                    role = res.data['role_id'];
                }
            }
        });
        var option2 = "";
        $.ajax({
            url:  JS_BASE_URL +'/administration/getEmployee',
            type : 'GET',
            dataType: 'json',
            async: false,
            success: function(res) {
                $.each(res, function(i, val) {
                    var selected = "";
                    if (email == val.email) {selected += "selected"};
                    option2 += '<option value="'+val.employee_id+"-"+val.email+'" '+selected+'>'+val.email+'</option>';
                });
            }
        });
        var option = "";
        $.ajax({
            url:  JS_BASE_URL +'/administration/getRoles/',
            type : 'GET',
            dataType: 'json',
            async: false,
            success: function(res) {
                $.each(res.data, function(i, val) {
                    var selected = "";
                    if (role == val.id) {selected += "selected"};
                    option += '<option value="'+val.id+'" '+selected+'>'+val.role_name+'</option>';
                });
            }
        });

        /*var scopes = ["Submarine", "Inland", "Civil Work", "FTTB", "FTTH"];
        var optionScope = "";
        $.each(scopes, function(i, val) {
            var selected = "";
            if (scope == val) {selected += "selected"};
            optionScope += '<option value="'+val+'" '+selected+'>'+val+'</option>';
        });*/
        bootbox.dialog({
                title: "Edit User",
                message: '<div class="row"> ' +
                '<div class="col-md-12">' +
                '<form action="#" id = "edit_user_form">' +
                '<div class="form-group">' +
                '<div class="row">'+
                '<div class="col-sm-6">'+
                '<label>Email</label> '+
                '<input type="hidden" name = "user_id" value = "'+userId+'" class="form-control"> '+
                '<select id="country" name="email" data-placeholder="Test" class="select">'+
                option2 +
                '</select>' +
                '</div> '+
                '<div class="col-sm-6">'+
                '<label>Name</label> '+
                '<input type="text" name = "fullname" value = "'+name+'" class="form-control"> '+
                '</div> '+
                '</div>'+
                '</div>'+
                '<div class="row">'+
                '<div class="col-sm-12">'+
                '<div class="form-group"> '+
                '<label>Role</label> '+
                '<select id="country" name="role" data-placeholder="Test" class="select">'+
                option +
                '</select>' +
                '</div> ' +
                '</div>' +
                '</div>' +
                '</div>'+
                '</div>'+
                '</div>'+
                '</form>' +
                '</div>' +
                '</div>',
                buttons: {
                    success: {
                        label: "Save",
                        className: "btn-success",
                        callback: function () {
                            var form = $('#edit_user_form');
                            $.ajax({
                                url:  JS_BASE_URL +'/administration/editUser',
                                type : 'POST',
                                dataType: 'json',
                                data: form.serialize(),
                                success: function(res) {
                                    var dbmil = $('.datatable-user-list').dataTable();
                                    if(res.status == 'Success'){
                                        dbmil.api().ajax.reload();
                                    }
                                }
                            });

                        }
                    }
                }
            }
        );

        $('.select').parents('.bootbox').removeAttr('tabindex');
        $('.select').select2();
        //$("#select").select2("val", company2);

        // Single picker
        /*if(start_date != null){
         $('#start_date').daterangepicker({
         singleDatePicker: true,
         startDate: moment(start_date).format('DD-MM-YYYY'),
         locale: {
         format: 'DD-MM-YYYY'
         },
         });
         } else {
         $('#start_date').daterangepicker({
         singleDatePicker: true,
         locale: {
         format: 'DD-MM-YYYY'
         },
         autoUpdateInput :false
         }, function(startDate, label){
         $('#start_date').val(startDate.format('DD-MM-YYYY'));
         });
         }
         if(end_date != null){
         $('#end_date').daterangepicker({
         singleDatePicker: true,
         startDate: moment(end_date).format('DD-MM-YYYY'),
         locale: {
         format: 'DD-MM-YYYY'
         },
         });
         } else {
         $('#end_date').daterangepicker({
         singleDatePicker: true,
         locale: {
         format: 'DD-MM-YYYY'
         },
         autoUpdateInput :false
         }, function(startDate, label){
         $('#end_date').val(startDate.format('DD-MM-YYYY'));
         });
         }*/


    });
};

var CallbackResource = function(){
    $('.edit-resource').on('click', function() {
        var option = "";
        var that = this;
        var resourceId = $(this).attr('res_id');
        var name = "",
            email = "",
            userId = "",
            joinDate = "",
            title = "",
            workLocation = "";

        $.ajax({
            url:  JS_BASE_URL +'/resource/detail/'+resourceId,
            type : 'GET',
            dataType: 'json',
            async: false,
            success: function(res) {
                if(res.status == 'Success'){
                    name = res.data.fullname;
                    email = res.data.email;
                    userId = res.data.user_id;
                    joinDate = res.data.join_date;
                    title = res.data.title;
                    workLocation = res.data.work_location;
                }
            }
        });
        /*var option2 = "";
        $.ajax({
            url:  JS_BASE_URL +'/administration/getEmployee',
            type : 'GET',
            dataType: 'json',
            async: false,
            success: function(res) {
                $.each(res, function(i, val) {
                    var selected = "";
                    if (email == val.email) {selected += "selected"};
                    option2 += '<option value="'+val.employee_id+"-"+val.email+'" '+selected+'>'+val.email+'</option>';
                });
            }
        });*/
        var option = "";
        $.ajax({
            url:  JS_BASE_URL +'/administration/activeUser/',
            type : 'GET',
            dataType: 'json',
            async: false,
            success: function(res) {
                //console.log(res);

                $.each(res.data, function(i, val) {
                    var selected = "";
                    if (userId == val.user_id) {selected += "selected"};
                    option += '<option value="'+val.user_id+'-'+val.email+'-'+val.fullname+'" '+selected+'>'+val.email+'</option>';
                });
            }
        });

        /*var scopes = ["Submarine", "Inland", "Civil Work", "FTTB", "FTTH"];
         var optionScope = "";
         $.each(scopes, function(i, val) {
         var selected = "";
         if (scope == val) {selected += "selected"};
         optionScope += '<option value="'+val+'" '+selected+'>'+val+'</option>';
         });*/
        bootbox.dialog({
            title: "Edit Resource",
            message: '<div class="row"> ' +
            '<div class="col-md-12">' +
            '<form action="#" id = "add_user_form">' +
            '<div class="form-group">' +
            '<div class="row">'+
            '<div class="col-sm-12">' +
            '<label>Name</label> '+
            '<input type="hidden" id = "user_id" name = "user_id" class="form-control" value="'+userId+'"> '+
            '<input type="text" id = "name" name = "name" class="form-control" disabled = "disabled" value = "'+name+'"> '+
            '</div>'+
            '</div>'+
            '</div>'+
            '<div class="form-group">' +
            '<div class="row">'+
            '<div class="col-sm-6">' +
            '<label>Join Date</label> '+
            '<input type="text" class="form-control daterange-single" name = "join_date" placeholder="Pick a date" value = "'+joinDate+'">'+
            '</div>'+
            '<div class="col-sm-6">' +
            '<label>Title</label> '+
            '<input type="text" id = "title" name = "title" class="form-control" value = "'+title+'"> '+
            '</div> '+
            '</div> '+
            '</div> '+
            '<div class="form-group">' +
            '<div class="row">'+
            '<div class="col-sm-6">' +
            '<label>Work Location</label> '+
            '<input type="text" id = "work_location" name = "work_location" class="form-control" value = "'+workLocation+'"> '+
                /*'<select id="name" name="work_location" data-placeholder="Select a user" class="select">'+
                 '<option value="" dissabled>Select a user</option>'+
                 option +
                 '</select>' +*/
            '</div>'+
            '</div>'+
            '</div>'+
            '</form>' +
            '</div>' +
            '</div>',
            buttons: {
                success: {
                    label: "Add User",
                    className: "btn-success",
                    callback: function () {
                        var form = $('#add_user_form');
                        $.ajax({
                            url:  JS_BASE_URL +'/resource/editResource/'+resourceId,
                            type : 'POST',
                            dataType: 'json',
                            data: form.serialize(),
                            success: function(res) {
                                var db = $('.datatable-resource-list').dataTable();
                                if(res.status == 'Success'){
                                    db.api().ajax.reload();
                                }
                            }
                        });

                    }
                }
            }
        });

        $('.select').parents('.bootbox').removeAttr('tabindex');
        $('.select').select2();
        $('.daterange-single').daterangepicker({
            singleDatePicker: true,
            locale: {
                format: 'YYYY-MM-DD'
            },
        });

        $( "#email" ).change(function() {
            res = $(this).val().split("-");
            $("#name").val(res[2]);
            $("#user_id").val(res[0]);
        });



    });
};