/* ------------------------------------------------------------------------------

*  Datatables data sources
*
*  @Kardiwan <kardiwan@gmail.com>
*
* ---------------------------------------------------------------------------- */

$(function() {

    // Table setup
    // ------------------------------

    // Setting datatable defaults
    $.extend( $.fn.dataTable.defaults, {
        autoWidth: false,
        columnDefs: [{ 
            //orderable: false,
            //width: '100px',
            //targets: [ 5 ]
        }],
        dom: '<"datatable-header"fl><"datatable-scroll"t><"datatable-footer"ip>',
        language: {
            search: '<span>Filter:</span> _INPUT_',
            lengthMenu: '<span>Show:</span> _MENU_',
            paginate: { 'first': 'First', 'last': 'Last', 'next': '&rarr;', 'previous': '&larr;' }
        },
        drawCallback: function () {
            $(this).find('tbody tr').slice(-3).find('.dropdown, .btn-group').addClass('dropup');
        },
        preDrawCallback: function() {
            $(this).find('tbody tr').slice(-3).find('.dropdown, .btn-group').removeClass('dropup');
        }
    });


    // Project list - datatable
   $('.datatable-projects-list').dataTable({
        processing: true,
        serverSide: true,
        ajax: {
            "url": JS_BASE_URL + "/projects/dataTableProjectList",
            "type": "POST"
        },
        columnDefs: [
            {
                render: function (data, type, row) {
                    var bgColor = ['bg-teal-400', 'bg-warning-400', 'bg-blue', 'bg-success-400', 'bg-pink-400', 'bg-brown-400'];
                    var rand = bgColor[Math.floor(Math.random() * bgColor.length)];

                    return '<div class="media-left media-middle">' +
                        '<a href="' + JS_BASE_URL + '/projects/id/' + row.id + '" class="btn ' + rand + ' btn-rounded btn-icon btn-xs">' +
                        '<span class="letter-icon">' + data.substr(0,1) + '</span>' +
                        '</a>' +
                        '</div>' +
                        '<div class="media-body">' +
                        '<a href="' + JS_BASE_URL + '/projects/id/' + row.id + '" class="display-inline-block text-default text-semibold letter-icon-title">' + data + '</a>' +
                        '<div class="text-muted text-size-small"><span class="status-mark border-success position-left"></span>' + row.company + '</div>' +
                        '</div>';
                },
                orderable: false,
                targets: 0
            },
            {
                render: function (data, type, row) {
                    if (row.start_date == null){
                        row.start_date = "-";
                    }

                    if (row.description == null){
                        row.description = "-";
                    }

                    if (row.description.length >= 25){
                        row.description = row.description.substring(0, 20)+"...";
                    }
                    return '<div class = "display-inline-block text-default letter-icon-title">' + row.description + '</div>';
                },
                orderable: false,
                targets: 1
            },
            {
                render: function (data, type, row) {
                    if (row.start_date == null){
                        row.start_date = "-"
                    }
                    return '<div class = "display-inline-block text-default text-semibold letter-icon-title">' + row.start_date + '</div>';
                },
                orderable: false,
                targets: 2
            },
            {
                render: function (data, type, row) {
                    if (row.end_date == null){
                        row.end_date = "-"
                    }
                    return '<div class = "display-inline-block text-default text-semibold letter-icon-title">' + row.end_date + '</div>';
                },
                targets: 3
            },
            {
                visible: false,
                targets: 4
            },
            {
                visible: false,
                targets: 5
            },
            {
                visible: false,
                targets: 6
            },
            {
                render : function(data, type, row){
                   var action_menu = '<ul class="icons-list">' +
                       '<li class="dropdown">' +
                       '<a href="#" class="dropdown-toggle" data-toggle="dropdown"><i class="icon-menu7"></i></a>' +
                       '<ul class="dropdown-menu dropdown-menu-right">' +
                       //'<li><a href="#" target="_blank"><i class="icon-clipboard3"></i> Application form</a></li>' +
                           // '<li><a class = "assign" data-id = "'+row.emp_requisition_id+'" candidate_id = "'+row.candidate_id+'"><i class="icon-users2"></i> Assign Inteviewer</li>'
                       '<li><a class = "edit_project" project_id = "'+row['id']+'"><i class="icon-pencil5"></i>Edit Project</a></li>' +
                       '</ul>' +
                       '</li>' +
                       '</ul>';
                   return action_menu;
               },
                orderable: false,
                targets: 7

            }
        ],
        //dom: '<"datatable-scroll"t><"datatable-footer"ip>',
        order: [0, "desc"],
        columns: [
            { data: "project_name" },
            { data: "description" },
            { data: "company" },
            { data: "team" },
            { data: "start_date" },
            { data: "end_date" },
            { data: "category" },
            { data: "id" }
        ],
        fnDrawCallback : function() {
            CallbackProject();
            /*this.api().on('draw', function() {
             CallbackMilestone();
             });*/
        }

    });
    var project_id = $('#project_id').val();
    $('.datatable-milestone-list').dataTable({
        processing: true,
        serverSide: true,
        ajax: {
            "url": JS_BASE_URL + "/projects/dataTableMilestone/"+project_id,
            "type": "POST"
        },
        columnDefs: [
            /*{
                render: function (data, type, row) {

                     return '<div class="checkbox"><input type="checkbox" class="styled"></div>';
                },
                orderable: false,
                targets: 0
            },*/
            {
                render: function (data, type, row) {

                    return '<h6 class="text-default"> ' + row.a.milestone_name + '</h6>'+
                    '<div class="text-muted text-size-small"><i class="icon-calendar2 position-left"></i> ' + row.a.due_date+ '</div>';
                },
                orderable: false,
                targets: 0
            },
            {
                 render: function (data, type, row) {

                    return '<span class="text-size-small text-default">' + row.b.name + '</span>';
                },
                orderable: false,
                targets: 1
            },
            {
                visible: false,
                targets: 2
            },
            {
                visible: false,
                targets: 3
            },
            {
                visible: false,
                targets: 4
            },
            {
                visible: false,
                targets: 5
            },
            {
                visible: false,
                targets: 6
            },
            {

                render: function (data, type, row) {
                    var action_menu = '<ul class="icons-list">' +
                        '<li class="dropdown">' +
                        '<a href="#" class="dropdown-toggle" data-toggle="dropdown"><i class="icon-menu7"></i></a>' +
                        '<ul class="dropdown-menu dropdown-menu-right">' +
                        '<li><a href="#" class = "attach_tasklist" project_id = "'+project_id+'" ><i class="icon-attachment"></i>Attach a tasklist</a></li>' +
                        '<li><a href="#" class = "edit_milestone" milestone_id="'+row.a.id+'"><i class="icon-pencil6"></i>Edit Milestone</a></li>' +
                        '</ul>' +
                        '</li>' +
                        '</ul>';
                    return action_menu;
                },
                orderable: false,
                visible: true,
                targets: 7
            }
        ],
        order: [1, "desc"],
        columns: [
            { data: "a.milestone_name" },
            { data: "a.due_date" },
            { data: "a.description" },
            { data: "a.responsible_to" },
            { data: "a.can_see_it" },
            { data: "a.should_follow_it" },
            { data: "b.name" },
            { data: "a.id" }
        ],
        fnDrawCallback : function() {
            CallbackMilestone();
            /*this.api().on('draw', function() {
                CallbackMilestone();
            });*/
        }

    });

   $('.datatable-task-list').dataTable({
        processing: true,
        serverSide: true,
        ajax: {
            "url": JS_BASE_URL + "/projects/dataTableTaskList/"+project_id,
            "type": "POST"
        },
        columnDefs: [
            /*{
                render: function (data, type, row) {

                     return '<div class="checkbox"><input type="checkbox" class="styled"></div>';
                },
                orderable: false,
                targets: 0
            },*/
            /*{
                searchable: false,
                visible: true,
                targets: 0
            },*/
            {
                render: function (data, type, row) {

                    return '<h6 class="text-default"> ' + row.a.tasks_name + '</h6>';
                },
                orderable: false,
                targets: 0
            },
            {
                render: function (data, type, row) {

                    return '<span class="text-size-small text-default">Test</span>';
                },
                orderable: false,
                targets: 1
            },
            {
                visible: true,
                targets: 2
            },
            {
                visible: true,
                targets: 3
            },
            {
                visible: true,
                targets: 4
            },
            {
                visible: false,
                targets: 5
            },
            {
                visible: false,
                targets: 6
            },
            {

                render: function (data, type, row) {
                    var action_menu = '<ul class="icons-list">' +
                        '<li class="dropdown">' +
                        '<a href="#" class="dropdown-toggle" data-toggle="dropdown"><i class="icon-menu7"></i></a>' +
                        '<ul class="dropdown-menu dropdown-menu-right">' +
                        '<li><a href="#" class = "attach_tasklist" project_id = "'+project_id+'"><i class="icon-attachment"></i>Attach a tasklist</a></li>' +
                        '<li><a href="#"><i class="edit_milestone icon-attachment" milestone_id = "'+row.id+'"></i>Edit Milestone</a></li>' +
                        '</ul>' +
                        '</li>' +
                        '</ul>';
                    return action_menu;
                },
                orderable: false,
                visible: true,
                targets: 7
            }
        ],
        //dom: '<"datatable-scroll"t><"datatable-footer"ip>',
        order: [1, "desc"],
        columns: [
            /*{
                className:      'details-control',
                orderable:      false,
                data:           null,
                defaultContent: ''
            },*/
            { data: "a.id" },
            { data: "b.task_list_name" },
            { data: "b.id" },
            { data: "a.projects_id" },
            { data: "b.milestone_id" },
            { data: "a.tasks_name" },
            { data: "d.name" },
            { data: "d.id" }
        ],
        fnDrawCallback : function() {
            callBackTaskList();
            /*this.api().on('draw', function() {
                CallbackMilestone();
            });*/
            var api = this.api();
            var rows = api.rows( {page:'current'} ).nodes();
            var last=null;
 
            api.column(1, {page:'current'} ).data().each( function ( group, i ) {
                if ( last !== group ) {
                    $(rows).eq( i ).before(
                        '<tr class="group"><td colspan="7">'+group+'</td></tr>'
                    );
 
                    last = group;
                }
            } );
        }

    });

    $('.datatable-people-list').dataTable({
        processing: true,
        serverSide: true,
        ajax: {
            "url": JS_BASE_URL + "/projects/dataTablePeople/"+project_id,
            "type": "POST"
        },
        columnDefs: [
            {
                render: function (data, type, row) {

                    return '<span class="text-size-small text-default"> ' + row.b.name + '</span>';
                },
                orderable: false,
                targets: 0
            },
            {
                 render: function (data, type, row) {

                    return '<span class="text-size-small text-default">' + row.b.email + '</span>';
                },
                orderable: false,
                targets: 1
            },
            {
                render: function (data, type, row) {

                    return '<span class="text-size-small text-default">' + row.b.company + '</span>';
                },
                orderable: false,
                targets: 2
            },
            {
                visible: false,
                targets: 3
            },
            {
                visible: false,
                targets: 4
            },
            /*{
                visible: false,
                targets: 5
            },
            {
                visible: false,
                targets: 6
            },
            {
                visible: false,
                targets: 7
            }*/
        ],
        //dom: '<"datatable-scroll"t><"datatable-footer"ip>',
        order: [0, "desc"],
        columns: [
            { data: "a.id" },
            { data: "b.name" },
            { data: "b.email" },
            { data: "b.company" },
            { data: "b.photo" },
        ]

    });



//==============================================================================================================






    // Feedback form - datatable
    $('.datatable-feedback-form').dataTable({
        processing: true,
        serverSide: true,
        ajax: {
            "url": JS_BASE_URL + "/ess/dataTableFeedbackForm",
            "type": "POST"
        },
        columnDefs: [
            {
                visible: false,
                targets: 0
            },
            {
                render: function (data, type, row) {
                    if(data=='OK'){
                        var label = 'border-left-success';
                        var l_text = 'Submit';
                        var active_text = 'text-normal';
                        var new_msg = '';
                    }else{
                        var label = 'border-left-warning';
                        var l_text = 'Unsubmit';
                        var active_text = 'text-semibold';
                        var new_msg = '<span class="label label-primary position-right">New</span>';
                    }

                    return '<span class="label ' + label + ' label-striped">' + l_text + '</span> <a href="http://morahrd.moratelindo.co.id/training/index.php/feedback/form/NTU5/OTAyI0thcmRpd2Fu" class="text-default ' + active_text + '">Feedback</a> ' + new_msg;
                },
                orderable: false,
                targets: 1
            },
            {
                render: function (data, type, row) {
                    var bgColor = ['bg-teal-400', 'bg-warning-400', 'bg-blue', 'bg-success-400', 'bg-pink-400', 'bg-brown-400'];
                    var rand = bgColor[Math.floor(Math.random() * bgColor.length)];

                    if(row.feedback_by_employee=='OK'){
                        var active_text = 'text-normal';
                    }else{
                        var active_text = 'text-semibold';
                    }

                    return '<div class="media-left media-middle">' +
                        '</div>' +
                        '<div class="media-body">' +
                        '<a href="javascript:;" class="display-inline-block text-default ' + active_text + ' letter-icon-title">Training: ' + data + '</a>' +
                        '</div>';
                },
                orderable: false,
                targets: 2
            },
            {
                render: function (data, type, row) {
                    if(row.feedback_by_employee=='OK'){
                        var active_text = 'text-normal';
                    }else{
                        var active_text = 'text-semibold';
                    }

                    return '<span class="text-right ' + active_text + '">' + row.start_date + '</span>';
                },
                orderable: false,
                targets: 3
            },
            {
                visible: false,
                targets: 4
            },
            {
                visible: false,
                targets: 5
            },
            {
                visible: false,
                targets: 6
            },
            {
                visible: false,
                targets: 7
            }
        ],
        dom: '<"datatable-scroll"t><"datatable-footer"ip>',
        order: [0, "desc"],
        columns: [
            { data: "b.emp_training_id" },
            { data: "feedback_by_employee" },
            { data: "a.course_name" },
            { data: "company" },
            { data: "start_date" },
            { data: "end_date" },
            { data: "location" },
            { data: "employee_id" }
        ],
        drawCallback: function ( settings ) {
            var api = this.api();
            var rows = api.rows( {page:'current'} ).nodes();
            var last=null;

            api.column(7, {page:'current'} ).data().each( function ( group, i ) {
                if ( last !== group ) {
                    $(rows).eq( i ).before(
                        '<tr class="active border-double"><td colspan="8">Inbox Feedback Form</td></tr>'
                    );

                    last = group;
                }
            });
        },
        rowCallback: function( nRow, aData, iDisplayIndex ) {
            /* Append the class to the default row class name */
            if ( aData.feedback_by_employee == "OK" )
            {
                nRow.className = "active";
            }
        }

    });

    // Assessment form - datatable
    $('.datatable-assessment-form').dataTable({
        processing: true,
        serverSide: true,
        ajax: {
            "url": JS_BASE_URL + "/ess/dataTableAssessmentForm",
            "type": "POST"
        },
        columnDefs: [
            {
                visible: false,
                targets: 0
            },
            {
                render: function (data, type, row) {
                    if(data=='OK'){
                        var label = 'border-left-success';
                        var l_text = 'Submit';
                        var active_text = 'text-normal';
                    }else{
                        var label = 'border-left-warning';
                        var l_text = 'Unsubmit';
                        var active_text = 'text-semibold';
                    }

                    return '<span class="label ' + label + ' label-striped">' + l_text + '</span> <a href="http://morahrd.moratelindo.co.id/training/index.php/feedback/form/NTU5/OTAyI0thcmRpd2Fu" class="text-default ' + active_text + '">Assessment</a>';
                },
                orderable: false,
                targets: 1
            },
            {
                render: function (data, type, row) {
                    var bgColor = ['bg-teal-400', 'bg-warning-400', 'bg-blue', 'bg-success-400', 'bg-pink-400', 'bg-brown-400'];
                    var rand = bgColor[Math.floor(Math.random() * bgColor.length)];

                    if(row.assessment_by_employee=='OK'){
                        var active_text = 'text-normal';
                    }else{
                        var active_text = 'text-semibold';
                    }

                    return '<div class="media-left media-middle">' +
                        '</div>' +
                        '<div class="media-body">' +
                        '<a href="javascript:;" class="display-inline-block text-default ' + active_text + ' letter-icon-title">Training: ' + data + '</a>' +
                        '</div>';
                },
                orderable: false,
                targets: 2
            },
            {
                render: function (data, type, row) {
                    if(row.assessment_by_employee=='OK'){
                        var active_text = 'text-normal';
                    }else{
                        var active_text = 'text-semibold';
                    }

                    return '<span class="text-right ' + active_text + '">' + row.start_date + '</span>';
                },
                orderable: false,
                targets: 3
            },
            {
                visible: false,
                targets: 4
            },
            {
                visible: false,
                targets: 5
            },
            {
                visible: false,
                targets: 6
            },
            {
                visible: false,
                targets: 7
            }
        ],
        dom: '<"datatable-scroll"t><"datatable-footer"ip>',
        order: [0, "desc"],
        columns: [
            { data: "b.emp_training_id" },
            { data: "assessment_by_employee" },
            { data: "a.course_name" },
            { data: "company" },
            { data: "start_date" },
            { data: "end_date" },
            { data: "location" },
            { data: "employee_id" }
        ],
        drawCallback: function ( settings ) {
            var api = this.api();
            var rows = api.rows( {page:'current'} ).nodes();
            var last=null;

            api.column(7, {page:'current'} ).data().each( function ( group, i ) {
                if ( last !== group ) {
                    $(rows).eq( i ).before(
                        '<tr class="active border-double"><td colspan="8">Inbox Assessment Form</td></tr>'
                    );

                    last = group;
                }
            });

        },
        rowCallback: function( nRow, aData, iDisplayIndex ) {
            /* Append the class to the default row class name */
            if ( aData.assessment_by_employee == "OK" )
            {
                nRow.className = "active";
            }
        }

    });

    // Coaching Quadrant form - datatable
    $('.datatable-coaching-quadrant-form').dataTable({
        processing: true,
        serverSide: true,
        ajax: {
            "url": JS_BASE_URL + "/ess/dataTableCoachingQuadrantForm",
            "type": "POST"
        },
        columnDefs: [
            {
                visible: false,
                targets: 0
            },
            {
                visible: false,
                targets: 1
            },
            {
                visible: false,
                targets: 2
            },
            {
                render: function (data, type, row) {

                    if(row.a.goal_question1 !== null){
                        return '<i class="icon-checkmark3 text-success"></i>';
                    } else {
                        return '<h6 class = "no-margin">'+row.lifetime+'</h6>' +
                            '<span class="display-block text-muted">days</span>';

                    }

                },
                orderable: false,
                targets: 3
            },
            {
                render: function (data, type, row) {

                    if (row.c.photo != "") {
                        var photo = '<a href="#"><img src="http://morahrd.moratelindo.co.id/karyawan/files/photos/thumbnails/' + row.c.photo + '" class="img-circle img-xs" alt=""></a>';
                    } else {
                        var bgColor = ['bg-teal-400', 'bg-warning-400', 'bg-blue', 'bg-success-400', 'bg-pink-400', 'bg-brown-400'];
                        var rand = bgColor[Math.floor(Math.random() * bgColor.length)];

                        $photo = '<a href="#" class="btn ' + rand + ' btn-rounded btn-icon btn-xs"><span class="letter-icon">' + data.substr(0,1) + '</span></a>';
                    }

                    if(row.a.goal_question1 == null){
                        link = JS_BASE_URL+'ess/coachingQuadrantForm/'+row.a.trn_coaching_id;
                    } else {
                        link = JS_BASE_URL+'ess/coachingQuadrantDetail/'+row.a.trn_coaching_id;
                    }

                    return '<div class="media-left media-middle">' + photo +'</div>' +
                        '<div class="media-body">' +
                        '<a href="'+link+'" class="display-inline-block text-default text-semibold letter-icon-title">' + data + '</a>' +
                        '<div class="text-muted text-size-small"><span class="status-mark border-green position-left"></span>' +  row.a.position_title + '</div>' +
                        '</div>';
                },
                orderable: false,
                targets: 4,
            },
            {
                visible: false,
                targets: 5
            },
            {
                render: function (data, type, row) {

                    if(row.a.goal_question1 == null){
                        link = JS_BASE_URL+'ess/coachingQuadrantForm/'+row.a.trn_coaching_id;
                    } else {
                        link = JS_BASE_URL+'ess/coachingQuadrantDetail/'+row.a.trn_coaching_id;
                    }

                    return '<a href="'+link+'" class="text-default display-inline-block">' +
                        '<span class="text-default">Coaching quadrant form</span>' +
                        '</a>';
                },
                orderable: false,
                targets: 6
            },
            {
                render: function (data, type, row) {

                    return '<a href="#" class="text-default display-inline-block">' +
                        '<span class="text-default">'+moment(row.a.created_date).format('DD MMM YYYY')+'</span>' +
                    '</a>';
                },
                orderable: false,
                targets: 7
            },
            {
                visible: false,
                targets: 8
            },
            {
                visible: false,
                targets: 9
            },
            {
                visible: false,
                targets: 10
            }
        ],
        dom: '<"datatable-scroll"t><"datatable-footer"ip>',
        order: [10, "asc"],
        columns: [
            { data: "a.trn_coaching_id" },
            { data: "a.employee_id" },
            { data: "a.supervisor_id" },
            { data: "a.employee_no" },
            { data: "b.employee_name" },
            { data: "a.department" },
            { data: "a.position_title" },
            { data: "a.level" },
            { data: "c.photo" },
            { data: "a.created_date"},
            {data : "a.goal_question1"}
        ],
        drawCallback: function ( settings ) {
            var api = this.api();
            var rows = api.rows( {page:'current'} ).nodes();
            var last=null;

            api.column(10, {page:'current'} ).data().each( function ( group, i ) {
                if (group == null){
                    group = 0;
                }
                if ( group !== 0) {
                    if(last == 0 || last == null){
                        $(rows).eq( i ).before(
                            '<tr class="active border-double"><td colspan="8">Finished</td></tr>'
                        );
                    }
                }
                if ( group == 0) {
                    if(last !==0){
                        $(rows).eq( i ).before(
                            '<tr class="active border-double"><td colspan="8">Active Coaching</td></tr>'
                        );
                    }
                }
                last = group;
            });

        },
        /*
         rowCallback: function( nRow, aData, iDisplayIndex ) {
         //Append the class to the default row class name
         if ( aData.assessment_by_employee == "OK" )
         {
         nRow.className = "active";
         }
         }*/

    });

    // Leave Request History - datatable
    $('.datatable-leave-request-history').dataTable({
        processing: true,
        serverSide: true,
        ajax: {
            "url": JS_BASE_URL + "/ess/dataTableLeaveRequestHistory",
            "type": "POST"
        },
        columnDefs: [
            {
                visible: false,
                targets: 0
            },
            {
                render: function (data, type, row) {
                    var bgColor = ['bg-teal-400', 'bg-warning-400', 'bg-blue', 'bg-success-400', 'bg-pink-400', 'bg-brown-400'];
                    var rand = bgColor[Math.floor(Math.random() * bgColor.length)];

                    return '<div class="text-center"><i class="icon-checkmark3 text-success"></i></div>';
                },
                orderable: false,
                targets: 1
            },
            {
                render: function (data, type, row) {
                    var bgColor = ['bg-teal-400', 'bg-warning-400', 'bg-blue', 'bg-success-400', 'bg-pink-400', 'bg-brown-400'];
                    var rand = bgColor[Math.floor(Math.random() * bgColor.length)];

                    return '<div class="media-left media-middle">' +
                        '<a href="javascript:;" class="btn ' + rand + ' btn-rounded btn-icon btn-xs">' +
                        '<span class="letter-icon">' + data.substr(0,1) + '</span>' +
                        '</a href="javascript:;">' +
                        '</div>' +
                        '<div class="media-body">' +
                        '<a href="javascript:;" class="display-inline-block text-default letter-icon-title">' + data + '</a>' +
                        '<div class="text-muted text-size-small"><span class="status-mark border-success position-left"></span> ' + row.request_status + '</div>' +
                        '</div>';
                },
                orderable: false,
                targets: 2
            },
            {
                render: function (data, type, row) {
                    return '<a href="#" class="text-default display-inline-block">' +
                           '<span class="text-semibold">' + row.leave_date_from + ' am - ' + row.leave_date_to + ' pm</span>' +
                           '<span class="display-block text-muted">' + row.reason + '</span></a>';
                },
                orderable: false,
                targets: 3
            },
            {
                visible: false,
                targets: 4
            },
            {
                render: function (data, type, row) {
                    return '<h6 class="no-margin text-center">' + data + '<small class="display-block text-size-small no-margin">day</small></h6>';
                },
                orderable: false,
                targets: 5
            },
            {
                visible: false,
                targets: 6
            },
            {
                visible: false,
                targets: 7
            }
        ],
        dom: '<"datatable-scroll"t><"datatable-footer"ip>',
        order: [0, "desc"],
        columns: [
            { data: "a.leave_req_id" },
            { data: "request_status" },
            { data: "$.request_date" },
            { data: "leave_date_from" },
            { data: "leave_date_to" },
            { data: "a.num_working_applied" },
            { data: "reason" },
            { data: "a.employee_id" }
        ],
        drawCallback: function ( settings ) {
            var api = this.api();
            var rows = api.rows( {page:'current'} ).nodes();
            var last=null;

            api.column(7, {page:'current'} ).data().each( function ( group, i ) {
                if ( last !== group ) {
                    $(rows).eq( i ).before(
                        '<tr class="active border-double"><td colspan="8">Leave request history</td></tr>'
                    );

                    last = group;
                }
            });

        }

    });


    // Travel Request - datatable
    $('.datatable-travel-request').dataTable({
        processing: true,
        serverSide: true,
        ajax: {
            "url": JS_BASE_URL + "/ess/dataTableTravelRequest",
            "type": "POST"
        },
        columnDefs: [
            {
                visible: false,
                targets: 0
            },
            {
                visible: false,
                targets: 1
            },
            {
                render: function (data, type, row) {
                    var bgColor = ['bg-teal-400', 'bg-warning-400', 'bg-blue', 'bg-success-400', 'bg-pink-400', 'bg-brown-400'];
                    var rand = bgColor[Math.floor(Math.random() * bgColor.length)];

                    if(row.a.status=='Prepared') {
                        var borderStyle = 'border-grey';
                    }else if(row.a.status=='Submitted'){
                        var borderStyle = 'border-primary';
                    }else if(row.a.status=='Partially Approved'){
                        var borderStyle = 'border-warning';
                    }else if(row.a.status=='Approved'){
                        var borderStyle = 'border-success';
                    }else if(row.a.status=='Cancelled'){
                        var borderStyle = 'border-danger';
                    }else if(row.a.status=='Rejected'){
                        var borderStyle = 'border-purple';
                    }

                    if(row.d.photo!=''){
                        var photo = '<a href="travelRequestDetail/' + row.a.travel_req_id + '" title="View detail" >' +
                                    '<img src="http://morahrd.moratelindo.co.id/karyawan/files/photos/thumbnails/' + row.d.photo + '" class="img-circle img-xs" alt="">' +
                                    '</a>';
                    }else{
                        var photo = '<a href="travelRequestDetail/' + row.a.travel_req_id + '" title="View detail" class="btn ' + rand + ' btn-rounded btn-icon btn-xs">' +
                                    '<span class="letter-icon">' + data.substr(0,1) + '</span>' +
                                    '</a>';
                    }

                    return '<div class="media-left media-middle">' + photo + '</div>' +
                            '<div class="media-body">' +
                            '<a href="travelRequestDetail/' + row.a.travel_req_id + '" title="View detail" class="display-inline-block text-default text-semibold letter-icon-title">' + data + '</a>' +
                            '<div class="text-muted text-size-small"><span class="status-mark ' + borderStyle + ' position-left"></span> ' + row.b.employee_no + '</div>' +
                            '</div>';
                },
                orderable: true,
                targets: 2
            },
            {
                render: function (data, type, row) {

                    return '<div class="media-body">' +
                        '<a href="travelRequestDetail/' + row.a.travel_req_id + '" title="" class="display-inline-block letter-icon-title">' + data + '</a>' +
                        '</div>';
                },
                orderable: true,
                targets: 3
            },
            {
                render: function (data, type, row) {

                    return '<span class="text-size-small text-default"><i class="icon-calendar2 position-left"></i> ' + data + '</span>';
                },
                orderable: true,
                targets: 4
            },
            {
                visible: false,
                targets: 5
            },
            {
                visible: false,
                targets: 6
            },
            {
                render: function (data, type, row) {

                    var str = data;
                    if(str.length > 37){
                        var purpose = str.substring(0, 37) + '...';
                    }else{
                        var purpose = str;
                    }
                    return '<span class="text-dafult">' + row.c.destination_from + ' <i class="icon-arrow-right5"></i> ' + row.c.destination_to + '</span>' +
                        '<span class="display-block text-muted">' + purpose +'</span>';
                },
                orderable: true,
                targets: 7
            },
            {
                render: function (data, type, row) {

                    if(row.a.status=='Prepared') {
                        var labelStyle = 'label-default';
                    }else if(row.a.status=='Submitted'){
                        var labelStyle = 'label-primary';
                    }else if(row.a.status=='Partially Approved'){
                        var labelStyle = 'label-warning';
                    }else if(row.a.status=='Approved'){
                        var labelStyle = 'label-success';
                    }else if(row.a.status=='Cancelled'){
                        var labelStyle = 'label-danger';
                    }else if(row.a.status=='Rejected'){
                        var labelStyle = 'bg-purple';
                    }

                    return '<div class="media-body">' +
                        '<div class="text-muted text-size-small"><span class="label ' + labelStyle + '">' + row.a.status + '</span></div>' +
                        '</div>';
                },
                orderable: true,
                targets: 8
            },
            {
                render: function (data, type, row) {

                    if(row.a.status=='Approved'){
                        var menu_extend_travel = '<li><a href="extendTravelRequest/' + row.a.travel_req_id + '/ext"><i class="icon-copy4"></i> Extend travel</a></li>';
                        var menu_add_travel_claim = '<li><a href="addTravelClaim/' + row.a.travel_req_id + '"><i class="icon-file-check"></i> Add travel claim</a></li>';
                        var separator_devider = '<li class="divider"></li>';
                        var menu_print_travel_job_desc = '<li><a href="travelRequestJobDescForm/' + row.a.travel_req_id + '"><i class="icon-printer4"></i> Print travel job desc</a></li>';
                        var menu_print_travel_request = '<li><a href="travelRequestForm/' + row.a.travel_req_id + '"><i class="icon-printer"></i> Print travel request</a></li>';
                    }else if(row.a.status=='Partially Approved'){
                        var menu_extend_travel = '';
                        var menu_add_travel_claim = '';
                        var separator_devider = '<li class="divider"></li>';
                        var menu_print_travel_job_desc = '<li><a href="travelRequestJobDescForm/' + row.a.travel_req_id + '"><i class="icon-printer4"></i> Print travel job desc</a></li>';
                        var menu_print_travel_request = '';
                    }else{
                        var menu_extend_travel = '';
                        var menu_add_travel_claim = '';
                        var separator_devider = '';
                        var menu_print_travel_job_desc = '';
                        var menu_print_travel_request = '';
                    }

                    var action_menu = '<ul class="icons-list">' +
                                        '<li class="dropdown">' +
                                        '<a href="#" class="dropdown-toggle" data-toggle="dropdown"><i class="icon-menu9"></i></a>' +
                                        '<ul class="dropdown-menu dropdown-menu-right">' +
                                        '<li><a href="travelRequestDetail/' + row.a.travel_req_id + '"><i class="icon-file-eye"></i> View request</a></li>' +
                                        menu_extend_travel +
                                        menu_add_travel_claim +
                                        separator_devider +
                                        menu_print_travel_job_desc +
                                        menu_print_travel_request +
                                        '</ul>' +
                                        '</li>' +
                                        '</ul>';
                    return action_menu;
                },
                orderable: false,
                targets: 9
            }

        ],
        //dom: '<"datatable-scroll"t><"datatable-footer"ip>',
        order: [0, "desc"],
        columns: [
            { data: "a.travel_req_id" },
            { data: "b.employee_no" },
            { data: "b.employee_name" },
            { data: "a.request_no" },
            { data: "a.request_date" },
            { data: "d.photo" },
            { data: "a.status" },
            { data: "a.purpose" },
            { data: "c.destination_from" },
            { data: "c.destination_to" }
        ]

    });

    // Travel Request History - datatable
    $('.datatable-my-travel-request-history').dataTable({
        processing: true,
        serverSide: true,
        ajax: {
            "url": JS_BASE_URL + "/ess/dataTableTravelRequestHistory",
            "type": "POST"
        },
        columnDefs: [
            {
                visible: false,
                targets: 0
            },
            {
                render: function (data, type, row) {

                    return '<span class="text-size-small text-default"><i class="icon-calendar2 position-left"></i> ' + row.a.request_date + '</span>';
                },
                orderable: false,
                targets: 1
            },
            {
                render: function (data, type, row) {

                    return '<div class="media-body">' +
                        '<a href="myTravelRequestDetail/' + row.a.travel_req_id + '" title="" class="display-inline-block letter-icon-title">' + data + '</a>' +
                        '</div>';
                },
                orderable: false,
                targets: 2
            },
            {
                render: function (data, type, row) {

                    var str = row.a.purpose;
                    if(str.length > 37){
                        var purpose = str.substring(0, 37) + '...';
                    }else{
                        var purpose = str;
                    }
                    return '<span class="text-dafult">' + row.c.destination_from + ' <i class="icon-arrow-right5"></i> ' + row.c.destination_to + '</span>' +
                        '<span class="display-block text-muted">' + purpose +'</span>';
                },
                orderable: false,
                targets: 3
            },
            {
                visible: false,
                targets: 4
            },
            {
                render: function (data, type, row) {

                    if(row.a.status=='Prepared') {
                        var labelStyle = 'label-default';
                    }else if(row.a.status=='Submitted'){
                        var labelStyle = 'label-primary';
                    }else if(row.a.status=='Partially Approved'){
                        var labelStyle = 'label-warning';
                    }else if(row.a.status=='Approved'){
                        var labelStyle = 'label-success';
                    }else if(row.a.status=='Cancelled'){
                        var labelStyle = 'label-danger';
                    }else if(row.a.status=='Rejected'){
                        var labelStyle = 'bg-purple';
                    }

                    return '<div class="media-body">' +
                        '<div class="text-muted text-size-small"><span class="label ' + labelStyle + '">' + row.a.status + '</span></div>' +
                        '</div>';
                },
                orderable: false,
                targets: 5
            },
            {
                render: function (data, type, row) {

                    if(row.a.status=='Partially Approved'){
                        var separator_devider = '<li class="divider"></li>';
                        var menu_print_travel_job_desc = '<li><a href="travelRequestJobDescForm/' + row.a.travel_req_id + '"><i class="icon-printer4"></i> Print travel job desc</a></li>';
                    }else{
                        var separator_devider = '';
                        var menu_print_travel_job_desc = '';
                    }

                    if(row.a.status=='Prepared'){
                        var menu_edit_request = '<li><a href="editMyTravelRequest/' + row.a.travel_req_id + '"><i class="icon-file-plus"></i> Edit request</a></li>';
                    }else{
                        var menu_edit_request = '';
                    }

                    var action_menu = '<ul class="icons-list">' +
                        '<li class="dropdown">' +
                        '<a href="#" class="dropdown-toggle" data-toggle="dropdown"><i class="icon-menu7"></i></a>' +
                        '<ul class="dropdown-menu dropdown-menu-right">' +
                        '<li><a href="myTravelRequestDetail/' + row.a.travel_req_id + '"><i class="icon-file-eye"></i> View request</a></li>' +
                        menu_edit_request +
                        separator_devider +
                        menu_print_travel_job_desc +
                        '</ul>' +
                        '</li>' +
                        '</ul>';
                    return action_menu;
                },
                orderable: false,
                visible: true,
                targets: 6
            },
            {
                visible: false,
                targets: 7
            },
            {
                visible: false,
                targets: 8
            },

        ],
        //dom: '<"datatable-scroll"t><"datatable-footer"ip>',
        order: [0, "desc"],
        columns: [
            { data: "a.travel_req_id" },
            { data: "a.request_date" },
            { data: "a.request_no" },
            { data: "a.status" },
            { data: "a.template_name" },
            { data: "a.purpose" },
            { data: "a.travel_req_id" },
            { data: "c.destination_from" },
            { data: "c.destination_to" }
        ]

    });

    // My Travel Claim - datatable
    $('.datatable-my-travel-claim').dataTable({
        processing: true,
        serverSide: true,
        ajax: {
            "url": JS_BASE_URL + "/ess/dataTableTravelClaimHistory",
            "type": "POST"
        },
        columnDefs: [
            {
                visible: false,
                targets: 0
            },
            {
                render: function (data, type, row) {

                    return '<span class="text-size-small text-default"><i class="icon-calendar2 position-left"></i> ' + data + '</span>';
                },
                orderable: false,
                targets: 1
            },
            {
                render: function (data, type, row) {

                    return '<div class="media-body">' +
                        '<a href="myTravelClaimDetail/' + row.a.travel_claim_id + '" title="" class="display-inline-block letter-icon-title">' + data + '</a>' +
                        '</div>';
                },
                orderable: false,
                targets: 2
            },
            {
                visible: false,
                targets: 3
            },
            {
                render: function (data, type, row) {

                    return '<span class="text-size-small text-muted">' + data + '</span>';
                },
                orderable: false,
                visible: false,
                targets: 4
            },
            {
                render: function (data, type, row) {

                    var str = row.b.purpose;
                    if(str.length > 37){
                        var purpose = str.substring(0, 37) + '...';
                    }else{
                        var purpose = str;
                    }
                    return '<span class="text-dafult">' + row.c.destination_from + ' <i class="icon-arrow-right5"></i> ' + row.c.destination_to + '</span>' +
                        '<span class="display-block text-muted">' + purpose +'</span>';
                },
                orderable: false,
                targets: 5
            },
            {
                render: function (data, type, row) {

                    return '<span class="text-size-small text-success-600">' + CurrencyFormat(data) + '</span>';
                },
                orderable: false,
                visible: false,
                targets: 6
            },
            {
                render: function (data, type, row) {

                    if(row.a.status=='Prepared') {
                        var labelStyle = 'label-default';
                    }else if(row.a.status=='Submitted'){
                        var labelStyle = 'label-primary';
                    }else if(row.a.status=='Partially Approved'){
                        var labelStyle = 'label-warning';
                    }else if(row.a.status=='Approved'){
                        var labelStyle = 'label-success';
                    }else if(row.a.status=='Cancelled'){
                        var labelStyle = 'label-danger';
                    }else if(row.a.status=='Rejected'){
                        var labelStyle = 'bg-purple';
                    }

                    return '<div class="media-body">' +
                        '<div class="text-muted text-size-small"><span class="label ' + labelStyle + '">' + row.a.status + '</span></div>' +
                        '</div>';
                },
                orderable: false,
                targets: 7
            }
        ],
        //dom: '<"datatable-scroll"t><"datatable-footer"ip>',
        order: [0, "desc"],
        columns: [
            { data: "a.travel_claim_id" },
            { data: "a.claim_date" },
            { data: "a.claim_no" },
            { data: "a.status" },
            { data: "b.purpose" },
            { data: "c.destination_from" },
            { data: "a.total_settlement"},
            { data: "c.destination_to" }
        ]

    });

    // Travel Claim - datatable
    $('.datatable-travel-claim').dataTable({
        processing: true,
        serverSide: true,
        ajax: {
            "url": JS_BASE_URL + "/ess/dataTableTravelClaim",
            "type": "POST"
        },
        columnDefs: [
            {
                visible: false,
                targets: 0
            },
            {
                visible: false,
                targets: 1
            },
            {
                render: function (data, type, row) {
                    var bgColor = ['bg-teal-400', 'bg-warning-400', 'bg-blue', 'bg-success-400', 'bg-pink-400', 'bg-brown-400'];
                    var rand = bgColor[Math.floor(Math.random() * bgColor.length)];

                    if(row.a.status=='Prepared') {
                        var borderStyle = 'border-grey';
                    }else if(row.a.status=='Submitted'){
                        var borderStyle = 'border-primary';
                    }else if(row.a.status=='Partially Approved'){
                        var borderStyle = 'border-warning';
                    }else if(row.a.status=='Approved'){
                        var borderStyle = 'border-success';
                    }else if(row.a.status=='Cancelled'){
                        var borderStyle = 'border-danger';
                    }else if(row.a.status=='Rejected'){
                        var borderStyle = 'border-purple';
                    }

                    if(row.d.photo!=''){
                        var photo = '<a href="travelClaimDetail/' + row.a.travel_claim_id + '" title="" >' +
                            '<img src="http://morahrd.moratelindo.co.id/karyawan/files/photos/thumbnails/' + row.d.photo + '" class="img-circle img-xs" alt="">' +
                            '</a>';
                    }else{
                        var photo = '<a href="travelClaimDetail/' + row.a.travel_claim_id + '" title="" class="btn ' + rand + ' btn-rounded btn-icon btn-xs">' +
                            '<span class="letter-icon">' + data.substr(0,1) + '</span>' +
                            '</a>';
                    }

                    return '<div class="media-left media-middle">' + photo + '</div>' +
                        '<div class="media-body">' +
                        '<a href="travelClaimDetail/' + row.a.travel_claim_id + '" title="" class="display-inline-block text-default text-semibold letter-icon-title">' + data + '</a>' +
                        '<div class="text-muted text-size-small"><span class="status-mark ' + borderStyle + ' position-left"></span> ' + row.c.employee_no + '</div>' +
                        '</div>';
                },
                orderable: true,
                targets: 2
            },
            {
                render: function (data, type, row) {

                    return '<div class="media-body">' +
                        '<a href="travelClaimDetail/' + row.a.travel_claim_id    + '" title="" class="display-inline-block letter-icon-title">' + data + '</a>' +
                        '</div>';
                },
                orderable: true,
                targets: 3
            },
            {
                render: function (data, type, row) {

                    return '<span class="text-size-small text-default"><i class="icon-calendar2 position-left"></i> ' + data + '</span>';
                },
                orderable: true,
                targets: 4
            },
            {
                render: function (data, type, row) {

                    var str = data;
                    if(str.length > 37){
                        var purpose = str.substring(0, 37) + '...';
                    }else{
                        var purpose = str;
                    }
                    return '<span class="text-dafult">' + row.e.destination_from + ' <i class="icon-arrow-right5"></i> ' + row.e.destination_to + '</span>' +
                        '<span class="display-block text-muted">' + purpose +'</span>';
                },
                orderable: true,
                targets: 5
            },
            {
                visible: false,
                targets: 6
            },
            {
                render: function (data, type, row) {

                    return '<span class="text-size-small text-success-600">' + CurrencyFormat(data) + '</span>';
                },
                orderable: true,
                visible: false,
                targets: 7
            },
            {
                render: function (data, type, row) {

                    if(row.a.status=='Prepared') {
                        var labelStyle = 'label-default';
                    }else if(row.a.status=='Submitted'){
                        var labelStyle = 'label-primary';
                    }else if(row.a.status=='Partially Approved'){
                        var labelStyle = 'label-warning';
                    }else if(row.a.status=='Approved'){
                        var labelStyle = 'label-success';
                    }else if(row.a.status=='Cancelled'){
                        var labelStyle = 'label-danger';
                    }else if(row.a.status=='Rejected'){
                        var labelStyle = 'bg-purple';
                    }

                    return '<div class="media-body">' +
                        '<div class="text-muted text-size-small"><span class="label ' + labelStyle + '">' + row.a.status + '</span></div>' +
                        '</div>';
                },
                orderable: true,
                targets: 8
            },
            {
                visible: false,
                targets: 9
            },
            {
                render: function (data, type, row) {

                    var action_menu = '<ul class="icons-list">' +
                        '<li class="dropdown">' +
                        '<a href="#" class="dropdown-toggle" data-toggle="dropdown"><i class="icon-menu9"></i></a>' +
                        '<ul class="dropdown-menu dropdown-menu-right">' +
                        '<li><a href="travelClaimDetail/' + row.a.travel_claim_id + '"><i class="icon-file-eye"></i> View claim</a></li>' +
                        '<li class="divider"></li>' +
                        '<li><a href="travelClaimForm/' + row.a.travel_claim_id + '"><i class="icon-printer"></i> Print travel claim</a></li>' +
                        '</ul>' +
                        '</li>' +
                        '</ul>';
                    return action_menu;
                },
                orderable: false,
                targets: 10
            }
        ],
        //dom: '<"datatable-scroll"t><"datatable-footer"ip>',
        order: [0, "desc"],
        columns: [
            { data: "a.travel_claim_id" },
            { data: "c.employee_no" },
            { data: "c.employee_name" },
            { data: "a.claim_no" },
            { data: "a.claim_date" },
            { data: "b.purpose" },
            { data: "d.photo" },
            { data: "a.total_settlement" },
            { data: "a.status" },
            { data: "e.destination_from" },
            { data: "e.destination_to" }
        ]

    });


    // Travel Request To Approve - datatable
    $('.datatable-travel-request-to-approve').dataTable({
        processing: true,
        serverSide: true,
        ajax: {
            "url": JS_BASE_URL + "/mss/dataTableTravelRequestToApprove",
            "type": "POST"
        },
        columnDefs: [
            {
                visible: false,
                targets: 0
            },
            {
                visible: false,
                targets: 1
            },
            {
                render: function (data, type, row) {
                    var bgColor = ['bg-teal-400', 'bg-warning-400', 'bg-blue', 'bg-success-400', 'bg-pink-400', 'bg-brown-400'];
                    var rand = bgColor[Math.floor(Math.random() * bgColor.length)];

                    if(row.a.status=='Prepared') {
                        var borderStyle = 'border-grey';
                    }else if(row.a.status=='Submitted'){
                        var borderStyle = 'border-primary';
                    }else if(row.a.status=='Partially Approved'){
                        var borderStyle = 'border-warning';
                    }else if(row.a.status=='Approved'){
                        var borderStyle = 'border-success';
                    }else if(row.a.status=='Cancelled'){
                        var borderStyle = 'border-danger';
                    }else if(row.a.status=='Rejected'){
                        var borderStyle = 'border-purple';
                    }

                    if(row.d.photo!=''){
                        var photo = '<a href="myTravelRequestToApproveDetail/' + row.a.travel_req_id + '" title="" >' +
                            '<img src="http://morahrd.moratelindo.co.id/karyawan/files/photos/thumbnails/' + row.d.photo + '" class="img-circle img-xs" alt="">' +
                            '</a>';
                    }else{
                        var photo = '<a href="myTravelRequestToApproveDetail/' + row.a.travel_req_id + '" title="" class="btn ' + rand + ' btn-rounded btn-icon btn-xs">' +
                            '<span class="letter-icon">' + data.substr(0,1) + '</span>' +
                            '</a>';
                    }

                    return '<div class="media-left media-middle">' + photo + '</div>' +
                        '<div class="media-body">' +
                        '<a href="myTravelRequestToApproveDetail/' + row.a.travel_req_id + '" title="" class="display-inline-block text-default text-semibold letter-icon-title">' + data + '</a>' +
                        '<div class="text-muted text-size-small"><span class="status-mark ' + borderStyle + ' position-left"></span> ' + row.b.employee_no + '</div>' +
                        '</div>';
                },
                orderable: true,
                targets: 2
            },
            {
                render: function (data, type, row) {

                    return '<div class="media-body">' +
                        '<a href="myTravelRequestToApproveDetail/' + row.a.travel_req_id + '" title="" class="display-inline-block letter-icon-title">' + data + '</a>' +
                        '</div>';
                },
                orderable: true,
                targets: 3
            },
            {
                render: function (data, type, row) {

                    return '<span class="text-size-small text-default"><i class="icon-calendar2 position-left"></i> ' + data + '</span>';
                },
                orderable: true,
                targets: 4
            },
            {
                visible: false,
                targets: 5
            },
            {
                visible: false,
                targets: 6
            },
            {
                render: function (data, type, row) {

                    var str = data;
                    if(str.length > 37){
                        var purpose = str.substring(0, 37) + '...';
                    }else{
                        var purpose = str;
                    }
                    return '<span class="text-dafult">' + row.c.destination_from + ' <i class="icon-arrow-right5"></i> ' + row.c.destination_to + '</span>' +
                        '<span class="display-block text-muted">' + purpose +'</span>';
                },
                orderable: true,
                targets: 7
            },
            {
                render: function (data, type, row) {

                    if(row.a.status=='Prepared') {
                        var labelStyle = 'label-default';
                    }else if(row.a.status=='Submitted'){
                        var labelStyle = 'label-primary';
                    }else if(row.a.status=='Partially Approved'){
                        var labelStyle = 'label-warning';
                    }else if(row.a.status=='Approved'){
                        var labelStyle = 'label-success';
                    }else if(row.a.status=='Cancelled'){
                        var labelStyle = 'label-danger';
                    }else if(row.a.status=='Rejected'){
                        var labelStyle = 'bg-purple';
                    }

                    return '<div class="media-body">' +
                        '<div class="text-muted text-size-small"><span class="label ' + labelStyle + '">' + row.a.status + '</span></div>' +
                        '</div>';
                },
                orderable: true,
                targets: 8
            },
            {
                render: function (data, type, row) {

                    if(row.a.status=='Approved'){
                        var menu_approve = '';
                        var menu_reject = '';
                        var menu_cancel = '';
                    }else if(row.a.status=='Partially Approved'){
                        var menu_approve = '';
                        var menu_reject = '<li><a href="javascript:;" class="prompt_travel_req_reject" data-id="'+row.a.travel_req_id+'"><i class="icon-close2"></i> Reject</a></li>';
                        var menu_cancel = '<li><a href="javascript:;" class="prompt_travel_req_cancel" data-id="'+row.a.travel_req_id+'"><i class="icon-cross3"></i> Cancel</a></li>';
                    }else if(row.a.status=='Submitted'){
                        var menu_approve = '<li><a href="javascript:;" class="prompt_travel_req_approval" data-id="' + row.a.travel_req_id + '"><i class="icon-checkmark2"></i> Approve</a></li>';
                        var menu_reject = '<li><a href="javascript:;" class="prompt_travel_req_reject" data-id="'+row.a.travel_req_id+'"><i class="icon-close2"></i> Reject</a></li>';
                        var menu_cancel = '<li><a href="javascript:;" class="prompt_travel_req_cancel" data-id="'+row.a.travel_req_id+'"><i class="icon-cross3"></i> Cancel</a></li>';
                    }else{
                        var menu_approve = '';
                        var menu_reject = '';
                        var menu_cancel = '';
                    }

                    var action_menu = '<ul class="icons-list">' +
                        '<li class="dropdown">' +
                        '<a href="#" class="dropdown-toggle" data-toggle="dropdown"><i class="icon-menu9"></i></a>' +
                        '<ul class="dropdown-menu dropdown-menu-right">' +
                        '<li><a href="myTravelRequestToApproveDetail/' + row.a.travel_req_id + '"><i class="icon-file-eye"></i> View request</a></li>' +
                        menu_approve +
                        menu_reject +
                        menu_cancel +
                        '</ul>' +
                        '</li>' +
                        '</ul>';
                    return action_menu;
                },
                orderable: false,
                targets: 9
            },
            {
                visible: false,
                targets: 10
            },
        ],
        //dom: '<"datatable-scroll"t><"datatable-footer"ip>',
        order: [0, "desc"],
        columns: [
            { data: "a.travel_req_id" },
            { data: "b.employee_no" },
            { data: "b.employee_name" },
            { data: "a.request_no" },
            { data: "a.request_date" },
            { data: "a.template_name" },
            { data: "d.photo" },
            { data: "a.purpose" },
            { data: "a.status" },
            { data: "c.destination_from" },
            { data: "c.destination_to" }
        ],
        fnDrawCallback : function() {
            CallbackTravelReqApproval();
        }
    });

    // Travel Claim To Approve - datatable
    $('.datatable-travel-claim-to-approve').dataTable({
        processing: true,
        serverSide: true,
        ajax: {
            "url": JS_BASE_URL + "/mss/dataTableTravelClaimToApprove",
            "type": "POST"
        },
        columnDefs: [
            {
                visible: false,
                targets: 0
            },
            {
                visible: false,
                targets: 1
            },
            {
                render: function (data, type, row) {
                    var bgColor = ['bg-teal-400', 'bg-warning-400', 'bg-blue', 'bg-success-400', 'bg-pink-400', 'bg-brown-400'];
                    var rand = bgColor[Math.floor(Math.random() * bgColor.length)];

                    if(row.a.status=='Prepared') {
                        var borderStyle = 'border-grey';
                    }else if(row.a.status=='Submitted'){
                        var borderStyle = 'border-primary';
                    }else if(row.a.status=='Partially Approved'){
                        var borderStyle = 'border-warning';
                    }else if(row.a.status=='Approved'){
                        var borderStyle = 'border-success';
                    }else if(row.a.status=='Cancelled'){
                        var borderStyle = 'border-danger';
                    }else if(row.a.status=='Rejected'){
                        var borderStyle = 'border-purple';
                    }

                    if(row.d.photo!=''){
                        var photo = '<a href="myTravelClaimToApproveDetail/' + row.a.travel_claim_id + '" title="" >' +
                            '<img src="http://morahrd.moratelindo.co.id/karyawan/files/photos/thumbnails/' + row.d.photo + '" class="img-circle img-xs" alt="">' +
                            '</a>';
                    }else{
                        var photo = '<a href="myTravelClaimToApproveDetail/' + row.a.travel_claim_id + '" title="" class="btn ' + rand + ' btn-rounded btn-icon btn-xs">' +
                            '<span class="letter-icon">' + data.substr(0,1) + '</span>' +
                            '</a>';
                    }

                    return '<div class="media-left media-middle">' + photo + '</div>' +
                        '<div class="media-body">' +
                        '<a href="myTravelClaimToApproveDetail/' + row.a.travel_claim_id + '" title="" class="display-inline-block text-default text-semibold letter-icon-title">' + data + '</a>' +
                        '<div class="text-muted text-size-small"><span class="status-mark ' + borderStyle + ' position-left"></span> ' + row.c.employee_no + '</div>' +
                        '</div>';
                },
                orderable: true,
                targets: 2
            },
            {
                render: function (data, type, row) {

                    return '<div class="media-body">' +
                        '<a href="myTravelClaimToApproveDetail/' + row.a.travel_claim_id + '" title="" class="display-inline-block letter-icon-title">' + data + '</a>' +
                        '</div>';
                },
                orderable: true,
                targets: 3
            },
            {
                render: function (data, type, row) {

                    return '<span class="text-size-small text-default"><i class="icon-calendar2 position-left"></i> ' + data + '</span>';
                },
                orderable: true,
                targets: 4
            },
            {
                render: function (data, type, row) {

                    var str = data;
                    if(str.length > 37){
                        var purpose = str.substring(0, 37) + '...';
                    }else{
                        var purpose = str;
                    }
                    return '<span class="text-dafult">' + row.e.destination_from + ' <i class="icon-arrow-right5"></i> ' + row.e.destination_to + '</span>' +
                        '<span class="display-block text-muted">' + purpose +'</span>';
                },
                orderable: true,
                targets: 5
            },
            {
                visible: false,
                targets: 6
            },
            {
                render: function (data, type, row) {

                    return '<span class="text-size-small text-success-600">' + CurrencyFormat(data) + '</span>';
                },
                orderable: true,
                visible: false,
                targets: 7
            },
            {
                render: function (data, type, row) {

                    if(row.a.status=='Prepared') {
                        var labelStyle = 'label-default';
                    }else if(row.a.status=='Submitted'){
                        var labelStyle = 'label-primary';
                    }else if(row.a.status=='Partially Approved'){
                        var labelStyle = 'label-warning';
                    }else if(row.a.status=='Approved'){
                        var labelStyle = 'label-success';
                    }else if(row.a.status=='Cancelled'){
                        var labelStyle = 'label-danger';
                    }else if(row.a.status=='Rejected'){
                        var labelStyle = 'bg-purple';
                    }

                    return '<div class="media-body">' +
                        '<div class="text-muted text-size-small"><span class="label ' + labelStyle + '">' + row.a.status + '</span></div>' +
                        '</div>';
                },
                orderable: true,
                targets: 8
            },
            {
                visible: false,
                targets: 9
            },
            {
                render: function (data, type, row) {

                    if(row.a.status=='Approved'){
                        var menu_approve = '';
                        var menu_reject = '';
                        var menu_cancel = '';
                    }else if(row.a.status=='Partially Approved'){
                        var menu_approve = '';
                        var menu_reject = '<li><a href="javascript:;" class="prompt_travel_claim_reject" data-id="' + row.a.travel_req_id + '" data-claim-id="'+ row.a.travel_claim_id + '"><i class="icon-close2"></i> Reject</a></li>';
                        var menu_cancel = '<li><a href="javascript:;" class="prompt_travel_claim_cancel" data-id="' + row.a.travel_req_id + '" data-claim-id="'+ row.a.travel_claim_id + '"><i class="icon-cross3"></i> Cancel</a></li>';
                    }else if(row.a.status=='Submitted'){
                        var menu_approve = '<li><a href="javascript:;" class="prompt_travel_claim_approval" data-id="' + row.a.travel_req_id + '" data-claim-id="' + row.a.travel_claim_id + '"><i class="icon-checkmark2"></i> Approve</a></li>';
                        var menu_reject = '<li><a href="javascript:;" class="prompt_travel_claim_reject" data-id="' + row.a.travel_req_id + '" data-claim-id="'+ row.a.travel_claim_id + '"><i class="icon-close2"></i> Reject</a></li>';
                        var menu_cancel = '<li><a href="javascript:;" class="prompt_travel_claim_cancel" data-id="' + row.a.travel_req_id + '" data-claim-id="'+ row.a.travel_claim_id + '"><i class="icon-cross3"></i> Cancel</a></li>';
                    }else{
                        var menu_approve = '';
                        var menu_reject = '';
                        var menu_cancel = '';
                    }

                    var action_menu = '<ul class="icons-list">' +
                        '<li class="dropdown">' +
                        '<a href="#" class="dropdown-toggle" data-toggle="dropdown"><i class="icon-menu9"></i></a>' +
                        '<ul class="dropdown-menu dropdown-menu-right">' +
                        '<li><a href="myTravelClaimToApproveDetail/' + row.a.travel_claim_id + '"><i class="icon-file-eye"></i> View claim</a></li>' +
                        menu_approve +
                        menu_reject +
                        menu_cancel +
                        '</ul>' +
                        '</li>' +
                        '</ul>';
                    return action_menu;
                },
                orderable: false,
                targets: 10
            }
        ],
        //dom: '<"datatable-scroll"t><"datatable-footer"ip>',
        order: [0, "desc"],
        columns: [
            { data: "a.travel_claim_id" },
            { data: "c.employee_no" },
            { data: "c.employee_name" },
            { data: "a.claim_no" },
            { data: "a.claim_date" },
            { data: "b.purpose" },
            { data: "d.photo" },
            { data: "a.travel_req_id" },
            { data: "a.status" },
            { data: "e.destination_from" },
            { data: "e.destination_to" }
        ],
        fnDrawCallback : function() {
            CallbackTravelClaimApproval();
        }

    });
   // Employee Requisition
    $('.datatable-employee-requisition').dataTable({
        processing: true,
        serverSide: true,
        ajax: {
            "url": JS_BASE_URL + "/mss/dataTableEmployeeRequisition",
            "type": "POST"
        },
        columnDefs: [
            {
                visible: false,
                targets: 0
            },
            {
                render: function (data, type, row) {

                    return '<span class="text-size-small text-default"><i class="icon-calendar2 position-left"></i> ' + data + '</span>';
                },
                orderable: false,
                targets: 1
            },
            {
                render: function (data, type, row) {

                    return '<div class="media-body">' +
                        '<a href="employeeRequisitionDetail/' + row.emp_requisition_id + '" title="" class="display-inline-block letter-icon-title">' + data + '</a>' +
                        '</div>';
                },
                orderable: false,
                targets: 2
            },
            {
                render: function (data, type, row) {

                    return '<span class="text-dafult">' + row.position_title + '</span>' +
                        '<span class="display-block text-muted">' + row.department +'</span>';
                },
                orderable: false,
                targets: 3
            },
            {
                visible: false,
                targets: 4
            },
            {
                render: function (data, type, row) {

                    return '<span class="text-size-small text-default"> ' + data + '</span>';
                },
                orderable: false,
                targets: 5
            },
            {
                render: function (data, type, row) {

                    if(row.status=='Prepared') {
                        var labelStyle = 'label-default';
                    }else if(row.status=='Submitted'){
                        var labelStyle = 'label-primary';
                    }else if(row.status=='Partially Approved'){
                        var labelStyle = 'label-warning';
                    }else if(row.status=='Approved'){
                        var labelStyle = 'label-success';
                    }else if(row.status=='Cancelled'){
                        var labelStyle = 'label-danger';
                    }else if(row.status=='Rejected'){
                        var labelStyle = 'bg-purple';
                    }else if(row.status=='Closed'){
                        var labelStyle = 'label-default';
                    }

                    return '<div class="media-body">' +
                        '<div class="text-muted text-size-small status" emp-req = "'+ row.emp_requisition_id +'"><span class="label ' + labelStyle + '">' + row.status + '</span></div>' +
                        '</div>';
                },
                orderable: false,
                targets: 6
            },
            {
                render: function (data, type, row) {

                    return '<span class="text-dafult">'+row.sla_working_days+'</span>' +
                        '<span class="display-block text-muted">days</span>';
                },
                orderable: false,
                targets: 7
            },
            {
                render: function (data, type, row) {

                    if(row.status=='Partially Approved'){
                        var separator_devider = '<li class="divider"></li>';
                        var menu_print_travel_job_desc = '<li><a href="travelRequestForm/' + row.emp_requisition_id + '"><i class="icon-printer4"></i> Print travel job desc</a></li>';
                    }else{
                        var separator_devider = '';
                        var menu_print_travel_job_desc = '';
                    }

                    if(row.status=='Prepared'){
                        var menu_edit_request = '<li><a href="editMyTravelRequest/' + row.emp_requisition_id + '"><i class="icon-file-plus"></i> Edit request</a></li>';
                    }else{
                        var menu_edit_request = '';
                    }

                    var action_menu = '<ul class="icons-list">' +
                        '<li class="dropdown">' +
                        '<a href="#" class="dropdown-toggle" data-toggle="dropdown"><i class="icon-menu7"></i></a>' +
                        '<ul class="dropdown-menu dropdown-menu-right">' +
                        '<li><a href="employeeRequisitionDetail/' + row.emp_requisition_id + '"><i class="icon-file-eye"></i> View request</a></li>' +
                        '<li><a href="editEmployeeRequisition/' + row.emp_requisition_id + '"><i class="icon-file-plus"></i> Edit request</a></li>'+
                        // menu_edit_request +
                        // separator_devider +
                        // menu_print_travel_job_desc +
                        '</ul>' +
                        '</li>' +
                        '</ul>';
                    return action_menu;
                },
                orderable: false,
                visible: true,
                targets: 8
            },
            {
                /*visible: false,
                targets: 9*/
            },

        ],
        //dom: '<"datatable-scroll"t><"datatable-footer"ip>',
        order: [0, "desc"],
        columns: [
            { data: "emp_requisition_id" },
            { data: "request_date" },
            { data: "request_no" },
            { data: "position_title" },
            { data: "department" },
            { data: "number_needed" },
            { data: "status" },
            { data: "work_location" },
            { data: "date_proposed" }
        ],
        fnDrawCallback : function() {
            Callback3();
            this.api().on('draw', function() {
                Callback3();
            });
        }

    });

    // Employee Requisition to Approve - datatable
    $('.datatable-employee-requisition-to-approve').dataTable({
        processing: true,
        serverSide: true,
        ajax: {
            "url": JS_BASE_URL + "/mss/dataTableEmployeeRequisitionToApprove",
            "type": "POST"
        },
        columnDefs: [
            {
                visible: false,
                targets: 0
            },
            {
                render: function (data, type, row) {

                    return '<span class="text-size-small text-default"><i class="icon-calendar2 position-left"></i> ' + data + '</span>';
                },
                orderable: false,
                targets: 1
            },
            {
                render: function (data, type, row) {

                    return '<div class="media-body">' +
                        '<a href="employeeRequisitionToApproveDetail/' + row.emp_requisition_id + '" title="" class="display-inline-block letter-icon-title">' + data + '</a>' +
                        '</div>';
                },
                orderable: false,
                targets: 2
            },
            {
                render: function (data, type, row) {

                    return '<span class="text-dafult">' + row.position_title + '</span>' +
                        '<span class="display-block text-muted">' + row.department +'</span>';
                },
                orderable: false,
                targets: 3
            },
            {
                visible: false,
                targets: 4
            },
            {
                render: function (data, type, row) {

                    return '<span class="text-size-small text-default"> ' + data + '</span>';
                },
                orderable: false,
                targets: 5
            },
            {
                render: function (data, type, row) {

                    if(row.status=='Prepared') {
                        var labelStyle = 'label-default';
                    }else if(row.status=='Submitted'){
                        var labelStyle = 'label-primary';
                    }else if(row.status=='Partially Approved'){
                        var labelStyle = 'label-warning';
                    }else if(row.status=='Approved'){
                        var labelStyle = 'label-success';
                    }else if(row.status=='Cancelled'){
                        var labelStyle = 'label-danger';
                    }else if(row.status=='Rejected'){
                        var labelStyle = 'bg-purple';
                    }

                    return '<div class="media-body">' +
                        '<div class="text-muted text-size-small status" emp-req = "'+ row.emp_requisition_id +'"><span class="label ' + labelStyle + '">' + row.status + '</span></div>' +
                        '</div>';
                },
                orderable: false,
                targets: 6
            },
            {
                render: function (data, type, row) {

                    /*if(row.status=='Partially Approved'){
                        var separator_devider = '<li class="divider"></li>';
                        var menu_print_travel_job_desc = '<li><a href="travelRequestForm/' + row.emp_requisition_id + '"><i class="icon-printer4"></i> Print travel job desc</a></li>';
                    }else{ 
                        var separator_devider = '';
                        var menu_print_travel_job_desc = '';
                    }

                    if(row.status=='Prepared'){
                        var menu_edit_request = '<li><a href="editMyTravelRequest/' + row.emp_requisition_id + '"><i class="icon-file-plus"></i> Edit request</a></li>';
                    }else{
                        var menu_edit_request = '';
                    }*/
                    //mark1
                    var action_menu = '<ul class="icons-list test">' +
                        '<li class="dropdown">' +
                        '<a href="#" class="dropdown-toggle" data-toggle="dropdown"><i class="icon-menu7"></i></a>' +
                        '<ul class="dropdown-menu dropdown-menu-right">' +
                        '<li><a href="employeeRequisitionDetail/' + row.emp_requisition_id + '"><i class="icon-file-eye"></i> View request</a></li>' +
                        '<li><a class = "action_approve" data-id = "'+row.emp_requisition_id+'"><i class="icon-checkmark4"></i> Approve</li>' +
                        '<li><a class = "action_reject" data-id = "'+row.emp_requisition_id+'"><i class="icon-cross2"></i> Reject</li>' +
                        '</ul>' +
                        '</li>' +
                        '</ul>';
                    return action_menu;
                },
                orderable: false,
                visible: true,
                targets: 7
            },
            {
                visible: false,
                targets: 8
            },

        ],
        //dom: '<"datatable-scroll"t><"datatable-footer"ip>',
        order: [6, "desc"],
        columns: [
            { data: "emp_requisition_id" },
            { data: "request_date" },
            { data: "request_no" },
            { data: "position_title" },
            { data: "department" },
            { data: "number_needed" },
            { data: "status" },
            { data: "work_location" },
            { data: "date_proposed" }
        ],
        fnDrawCallback : function() {
            Callback1();
            var api = this.api();
            var rows = api.rows( {page:'current'} ).nodes();
            var last=null;
            api.column(6, {page:'current'} ).data().each( function ( group, i ) {
                if ( group !== 'Submitted') {
                    if(last == 'Submitted'){
                        $(rows).eq( i ).before(
                            '<tr class="active border-double"><td colspan="8">Approved/Rejected</td></tr>'
                        );
                    }
                }
                if ( group == 'Submitted') {
                    if(last != 'Submitted'){
                        $(rows).eq( i ).before(
                            '<tr class="active border-double"><td colspan="8">Need Approval</td></tr>'
                        );
                    }
                }
                last = group;
            });
        }
    });

    // Employee Requisition Candidate - datatable
    var emp_requisition_id = $('#emp_requisition_id').val();
    $('.datatable-employee-requisition-candidate').dataTable({
        processing: true,
        serverSide: true,
        ajax: {
            "url": JS_BASE_URL + "mss/dataTableEmployeeRequisitionCandidate/" + emp_requisition_id,
            "type": "POST"
        },
        columnDefs: [
            {
                visible: false,
                targets: 0
            },
            {
                visible: false,
                targets: 1
            },
            {
                render: function (data, type, row) {
                    var bgColor = ['bg-teal-400', 'bg-warning-400', 'bg-blue', 'bg-success-400', 'bg-pink-400', 'bg-brown-400'];
                    var rand = bgColor[Math.floor(Math.random() * bgColor.length)];

                    return '<div class="media-left media-middle">' +
                        '<a href="javascript:;" class="btn ' + rand + ' btn-rounded btn-icon btn-xs">' +
                        '<span class="letter-icon">' + row.candidate_name.substr(0,1) + '</span>' +
                        '</a href="javascript:;">' +
                        '</div>' +
                        '<div class="media-body">' +
                        '<a href="#" class="display-inline-block text-default text-semibold letter-icon-title">' + row.candidate_name + '</a>' +
                        '<div class="text-muted text-size-small"><span class="status-mark border-blue position-left"></span> -</div>' +
                        '</div>';
                },
                orderable: true,
                targets: 2
            },
            {
                render: function (data, type, row) {
                    var tmp = '';
                    if(row.interview_user == 1){
                        tmp = '<a href="#" class="letter-icon-title text-success iu" emp_req = "'+row.emp_requisition_id+'" candidate_id = "'+row.candidate_id+'" candidate_name = "'+row.candidate_name+'"><i class="icon-checkmark-circle text-success position-left"></i> Yes</a>';
                    } else {
                        tmp = '<a href="#" class="letter-icon-title text-warning-400"><i class="icon-blocked text-size-mini position-left"></i> No</a>';
                    }
                    if (row.interview_user_date != null){
                        tmp += '<div class="text-muted text-size-small">'+row.interview_user_date+'</div>';
                    } else {
                        tmp += '<div class="text-muted text-size-small">-</div>';
                    }
                    return tmp;
                },
                orderable: true,
                targets: 3
            },
            {
                render: function (data, type, row) {
                    var tmp = '';
                    if(row.psychotest == 1){
                        tmp = '<a href="#" class="letter-icon-title text-success ps" emp_req = "'+row.emp_requisition_id+'" candidate_id = "'+row.candidate_id+'" candidate_name = "'+row.candidate_name+'"><i class="icon-checkmark-circle text-success position-left"></i> Yes</a>';
                    } else {
                        tmp = '<a href="#" class="letter-icon-title text-warning-400"><i class="icon-blocked text-size-mini position-left"></i> No</a>';
                    }
                    if (row.psychotest_date != null){
                        tmp += '<div class="text-muted text-size-small">'+row.psychotest_date+'</div>';
                    } else {
                        tmp += '<div class="text-muted text-size-small">-</div>';
                    }
                    return tmp;
                },
                orderable: false,
                targets: 4
            },
            {
                render: function (data, type, row) {
                    var tmp = '';
                    if(row.interview_hr == 1){
                        tmp = '<a href="#" class="letter-icon-title text-success hr" candidate_id = "'+row.candidate_id+'"><i class="icon-checkmark-circle text-success position-left"></i> Yes</a>';
                    } else {
                        tmp = '<a href="#" class="letter-icon-title text-warning-400"><i class="icon-blocked text-size-mini position-left"></i> No</a>';
                    }
                    if (row.interview_hr_date != null){
                        tmp += '<div class="text-muted text-size-small">'+moment(row.interview_hr_date).format('ddd, DD MMM YYYY')+'</div>';
                    } else {
                        tmp += '<div class="text-muted text-size-small">-</div>';
                    }
                    return tmp;
                },
                orderable: false,
                targets: 5
            },
            {
                render: function (data, type, row) {
                    var tmp = '';
                    if(row.presentation == 1){
                        tmp = '<a href="#" class="letter-icon-title text-success pr" candidate_id = "'+row.candidate_id+'"><i class="icon-checkmark-circle text-success position-left"></i> Yes</a>';
                    } else {
                        tmp = '<a href="#" class="letter-icon-title text-warning-400"><i class="icon-blocked text-size-mini position-left"></i> No</a>';
                    }
                    if (row.presentation_date != null){
                        tmp += '<div class="text-muted text-size-small">'+moment(row.presentation_date).format('ddd, DD MMM YYYY')+'</div>';
                    } else {
                        tmp += '<div class="text-muted text-size-small">-</div>';
                    }
                    return tmp;
                },
                orderable: false,
                targets: 6
            },
            {
                render: function (data, type, row) {
                    var tmp = '';
                    if(row.closing == 1){
                        tmp = '<a href="#" class="letter-icon-title text-success closing" candidate_id = "'+row.candidate_id+'"><i class="icon-checkmark-circle text-success position-left"></i> Yes</a>';
                    } else {
                        tmp = '<a href="#" class="letter-icon-title text-warning-400"><i class="icon-blocked text-size-mini position-left"></i> No</a>';
                    }
                    if (row.closing_date != null){
                        tmp += '<div class="text-muted text-size-small">'+moment(row.closing_date).format('ddd, DD MMM YYYY')+'</div>';
                    } else {
                        tmp += '<div class="text-muted text-size-small">-</div>';
                    }
                    return tmp;
                },
                orderable: false,
                targets: 7
            },
            {
                render: function (data, type, row) {

                    return '<span class="text-dafult">'+row.sla_working_days+'</span>' +
                        '<span class="display-block text-muted">days</span>';
                },
                orderable: false,
                targets: 8
            },
            {
                render: function (data, type, row) {
                    var interview_user = '';
                    var psychotest = '';
                    if (row.interview_user == 1){
                        interview_user = '<li><a href="'+JS_BASE_URL+'interview/viewResult/' + row.cand_name+'/'+row.candidate_id + '/'+ row.emp_requisition_id+'" target="_blank"><i class="icon-file-plus"></i>Interview Form</a></li>';
                    }else {
                        interview_user = '<li><a href="'+JS_BASE_URL+'interview/candidate/' + row.cand_name+'/'+row.candidate_id +'/'+ row.emp_requisition_id+ '" target="_blank"><i class="icon-file-plus"></i> Interview Form</a></li>';
                    }
                    if (row.psychotest == 1){
                        psychotest = '<li><a href="'+JS_BASE_URL+'psychotest/result/' + row.cand_name+'/'+row.candidate_id + '/'+ row.emp_requisition_id+'" target="_blank"><i class="icon-file-plus"></i>Psychotest Result</a></li>';
                    }
                    var action_menu = '<ul class="icons-list">' +
                        '<li class="dropdown">' +
                        '<a href="#" class="dropdown-toggle" data-toggle="dropdown"><i class="icon-menu7"></i></a>' +
                        '<ul class="dropdown-menu dropdown-menu-right">' +
                        '<li><a href="http://morahrd.moratelindo.co.id/karyawan/index.php/hris/candidateApplicationForm/'+row.cand_name+'/'+row.candidate_id+'" target="_blank"><i class="icon-clipboard3"></i> Application form</a></li>' +
                        interview_user +
                        psychotest +
                        '<li><a class = "candidate_history" candidate_id = "'+row.candidate_id+'" emp_req = "'+row.emp_requisition_id+'" candidate_name = "'+row.candidate_name+'"><i class="icon-archive"></i>Candidate History</a></li>' +
                        '</ul>' +
                        '</li>' +
                        '</ul>';
                    return action_menu;
                },
                orderable: false,
                visible: true,
                targets: 9
            },
            {
                visible: false,
                targets: 10
            },
            {
                visible: false,
                targets: 11
            },
            {
                visible: false,
                targets: 12
            },
            {
                visible: false,
                targets: 13
            }

        ],
        //dom: '<"datatable-scroll"t><"datatable-footer"ip>',
        order: [0, "desc"],
        columns: [
            { data: "emp_requisition_id" },
            { data: "candidate_id" },
            { data: "candidate_name" },
            { data: "interview_user" },
            { data: "interview_user_date" },
            { data: "psychotest" },
            { data: "psychotest_date" },
            { data: "interview_hr" },
            { data: "interview_hr_date" },
            { data: "presentation" },
            { data: "presentation_date" },
            { data: "closing" },
            { data: "sla_working_days" },
            { data: "created_date" },
        ],
        fnDrawCallback : function() {
            // Callback1();
            callBack2();
            this.api().on('draw', function() {
                callBack2();
            });
        }

    });

    //------------------------------------------------------------------------------------------------------------------

    // Javascript sourced data
    var dataSet = [
        ['Trident','Internet Explorer 4.0','Win 95+','4','X'],
        ['Trident','Internet Explorer 5.0','Win 95+','5','C'],
        ['Trident','Internet Explorer 5.5','Win 95+','5.5','A'],
        ['Trident','Internet Explorer 6','Win 98+','6','A'],
        ['Gecko','Firefox 1.0','Win 98+ / OSX.2+','1.7','A'],
        ['Gecko','Firefox 1.5','Win 98+ / OSX.2+','1.8','A'],
        ['Gecko','Firefox 2.0','Win 98+ / OSX.2+','1.8','A'],
        ['Gecko','Firefox 3.0','Win 2k+ / OSX.3+','1.9','A'],
        ['Gecko','Camino 1.0','OSX.2+','1.8','A'],
        ['Gecko','Camino 1.5','OSX.3+','1.8','A'],
        ['Webkit','Safari 1.2','OSX.3','125.5','A'],
        ['Webkit','Safari 1.3','OSX.3','312.8','A'],
        ['Webkit','Safari 2.0','OSX.4+','419.3','A'],
        ['Presto','Opera 7.0','Win 95+ / OSX.1+','-','A'],
        ['Presto','Opera 7.5','Win 95+ / OSX.2+','-','A'],
        ['Misc','NetFront 3.1','Embedded devices','-','C'],
        ['Misc','NetFront 3.4','Embedded devices','-','A'],
        ['Misc','Dillo 0.8','Embedded devices','-','X'],
        ['Misc','Links','Text only','-','X']
    ];

    $('.datatable-js').dataTable({
        data: dataSet,
        columnDefs: []
    });


    // Nested object data
    $('.datatable-nested').dataTable({
        ajax: 'assets/demo_data/tables/datatable_nested.json',
        columns: [
            {data: "name[, ]"},
            {data: "hr.0" },
            {data: "office"},
            {data: "extn"},
            {data: "hr.2"},
            {data: "hr.1"}
        ]
    });


    // Generate content for a column
    var table = $('.datatable-generated').DataTable({
        ajax: 'assets/demo_data/tables/datatable_ajax.json',
        columnDefs: [{
            targets: 2,
            data: null,
            defaultContent: "<button class='label label-default'>Show</button>"
        },
        { 
            orderable: false,
            targets: [0, 2]
        }]
    });
    
    $('.datatable-generated tbody').on('click', 'button', function () {
        var data = table.row($(this).parents('tr')).data();
        alert(data[0] +"'s location is: "+ data[ 2 ]);
    });



    // External table additions
    // ------------------------------

    // Add placeholder to the datatable filter option
    $('.dataTables_filter input[type=search]').attr('placeholder','Type to filter...');


    // Enable Select2 select for the length option
    $('.dataTables_length select').select2({
        minimumResultsForSearch: Infinity,
        width: 'auto'
    });

    
});

function CurrencyFormat(number)
{
    return (Math.round(number * 100) / 100).toLocaleString('id');
}

var CallbackMilestone = function(){
    $('.attach_tasklist').on('click', function() {
        var option = "";
        var project_id = $(this).attr('project_id');
        var milestone_id = $(this).attr('milestone_id');

        $.ajax({
            url:  JS_BASE_URL +'/projects/getTaskList',
            type : 'POST',
            dataType: 'json',
            data :{project_id : project_id},
            async: false, 
            success: function(res) {
                if(res.status == 'Success'){
                    $.each(res.data, function(i, val) {
                        option += '<option value="'+val.id+'">'+val.task_list_name+'</option> ';
                    });
                }
            }
        });
        bootbox.dialog({
                title: "Attach Task List",
                message: '<div class="row">  ' +
                            '<div class="col-md-12">' +
                            '<form action="#" id = "task_list_form">' +
                            '<div class="form-group">' +
                            '<input type = "hidden" name = "milestone_id" value = "'+milestone_id+'">'+
                            '<select name="task_list_id" data-placeholder="Select tasklist" class="select">' +
                            '<option value="">No Milestone</option>'+
                            option +
                            '</select>' +
                            '</div>' +
                            '</form>' +
                            '</div>' +
                            '</div>',
                buttons: {
                    success: {
                        label: "Attach Task List",
                        className: "btn-success",
                        callback: function () {
                            var form = $('#task_list_form');
                            $.ajax({
                                url:  JS_BASE_URL +'/projects/attachTaskList',
                                type : 'POST',
                                dataType: 'json',
                                data: form.serialize(),
                                success: function(res) {
                                    /*if(res.status == 'Success'){
                                        window.location.replace(JS_BASE_URL +'/projects/all');
                                    }*/
                                }
                            });

                        }
                    }
                }
            }
        );

        $('.select').parents('.bootbox').removeAttr('tabindex');
        $('.select').select2();

        // Single picker
        $('.daterange-single').daterangepicker({
            singleDatePicker: true,

        });
    });

    $('.edit_milestone').on('click', function() {
        var milestone_name = "", responsible_user = "", due_date = "", note = "", followers = "";
        var project = "";
        var milestone_id = $(this).attr('milestone_id');
        $.ajax({
            url:  JS_BASE_URL +'/projects/getMilestoneDetail/'+ milestone_id,
            type : 'GET',
            dataType: 'json',
            async: false,
            success: function(res) {
                if(res.status == 'Success'){
                    milestone_name = res.data[0].milestone_name;
                    responsible_user = res.data[0].responsible_to;
                    due_date = res.data[0].due_date;
                    note = res.data[0].description;
                    project = res.data[0].projects_id;
                    //console.log(res.data);
                    /*$.each(res.data, function(i, val) {
                        var slctd = "";
                        if (company2 == val.company_name) {slctd += "selected"};
                        company += '<option value="'+val.company_name+'" '+slctd+'>'+val.company_name+'</option> ';
                    });*/
                }
            }
        });
        var option = "";
        console.log(project);
        $.ajax({
                url:  JS_BASE_URL +'/projects/getPeopleInProject/'+project,
                type : 'GET',
                dataType: 'json',
                async: false,
                success: function(res) {
                if(res.status == 'Success'){
                    $.each(res.data, function(i, val) {
                        var selected = "";
                        //console.log(responsible_user);
                        //console.log(val.id);
                        if(responsible_user == val.id){
                            selected = "selected";
                        }
                        option += '<option value="'+val.id+'" '+selected+'>'+val.name+'</option> ';
                    });
                }
            }
        });
        console.log(option);
        bootbox.dialog({
                title: "Edit Milestone",
                message: '<div class="row"> ' +
                '<div class="col-md-12">' +
                '<form action="#" id = "add_milestone_form">' +
                '<div class="form-group">' +
                '<div class="row">'+
                '<div class="col-sm-12">'+
                '<label>Name the milestone</label> '+
                '<input type="text" name = "milestone" value = "'+milestone_name+'"class="form-control"> '+
                //'<input type="hidden" name = "project_id"  value = "<?php echo $project_id?>" class="form-control">' +
                '</div> '+
                '</div> '+
                '</div>'+
                '<div class="row">'+
                '<div class="col-sm-6">'+
                '<div class="form-group"> '+
                '<label>Who is responsible?</label> '+
                '<select id="country" name="asignee" data-placeholder="Anyone" class="select company">'+
                '<option value="">Anyone</option> '+
                option+
                '</select>' +
                '</div> ' +
                '</div>' +
                '<div class="col-sm-6">' +
                '<label>Due Date</label>' +
                '<div class="input-group">' +
                '<span class="input-group-addon"><i class="icon-calendar22"></i></span>' +
                '<input type="text" id = "due_date" class="form-control daterange-single" name = "milestone_due_date" placeholder="No date">' +
                '</div>' +
                '</div>' +
                '</div>' +
                '<ul class="nav nav-lg nav-tabs nav-tabs-bottom nav-tabs-toolbar no-margin">'+
                '<li class="active"><a href="#a" data-toggle="tab" aria-expanded="true">Notes</a></li>'+
                ' <li class=""><a href="#b" data-toggle="tab" aria-expanded="false">Followers</a></li>'+
                '</ul>'+
                '<div class="tab-content">'+
                '<div class="tab-pane fade active in" id="a">'+
                '<div class="form-group">'+
                '<label class = "m-10">Provide a Description (Optional):</label> '+
                '<textarea rows="4" cols="5" name = "description" placeholder="Description..." class="form-control"></textarea>'+
                '</div>'+
                '</div>'+
                '<div class="tab-pane fade" id="b">'+
                '<div class="form-group">'+
                '<label class = "m-10">Who can see it?</label>'+
                '<select data-placeholder="Select user" class="select company" multiple = "multiple">'+
                '<option value="anyone">Anyone in this project</option>'+
                '<option value="me">Me</option>'+
                '</select>'+
                '</div>'+
                '</div>'+
                '</form>' +
                '</div>' +
                '</div>',
                buttons: {
                    success: {
                        label: "Save",
                        className: "btn-success",
                        callback: function () {
                            var form = $('#add_milestone_form');
                            $.ajax({
                                url:  JS_BASE_URL +'/projects/saveMilestone',
                                type : 'POST',
                                dataType: 'json',
                                data: form.serialize(),
                                success: function(res) {
                                    var dbmil = $('.datatable-milestone-list').dataTable();
                                    if(res.status == 'Success'){
                                        dbmil.api().ajax.reload();
                                    }
                                }
                            });

                        }
                    }
                }
            }
        );

        $('.select').parents('.bootbox').removeAttr('tabindex');
        $('.select').select2();
        // Single picker
        $('.daterange-single').daterangepicker({
            singleDatePicker: true,
        });
    });
};
var callBackTaskList = function() {
    /*var table = $('.datatable-task-list').dataTable().api();
    $('.datatable-task-list tbody').on('click', 'td.details-control', function () {
        var tr = $(this).closest('tr');
        var row = table.row( tr );
 
        if ( row.child.isShown() ) {
            // This row is already open - close it
            row.child.hide();
            tr.removeClass('shown');
        }
        else {
            // Open this row
            row.child( format(row.data()) ).show();
            tr.addClass('shown');
        }
    } );
    function format ( d ) {
        return '<table cellpadding="5" cellspacing="0" border="0" style="padding-left:50px;">'+
            '<tr>'+
                '<td>Full name:</td>'+
                '<td>'+d.task_list_name+'</td>'+
            '</tr>'+
            '<tr>'+
                '<td>Extension number:</td>'+
                '<td>B</td>'+
            '</tr>'+
            '<tr>'+
                '<td>Extra info:</td>'+
                '<td>And any further details here (images etc)...</td>'+
            '</tr>'+
        '</table>';
    }*/
};


var CallbackProject = function(){
    $('.edit_project').on('click', function() {
        var option = "";
        var that = this;
        var id_project = $(this).attr('project_id');
        var project_name = "", start_date = "", end_date ="", company2 = "", description= "";
        $.ajax({
            url:  JS_BASE_URL +'/projects/getProjectDetail/'+id_project,
            type : 'GET',
            dataType: 'json',
            async: false,
            success: function(res) {
                if(res.status == 'Success'){
                    project_name = res.data[0].project_name;
                    start_date = res.data[0].start_date;
                    end_date = res.data[0].end_date;
                    description = res.data[0].description;
                    company2 = res.data[0].company;
                    $('#start_date').val(start_date);
                }
            }
        });
        var company = "";
        $.ajax({
            url:  JS_BASE_URL +'/projects/getCompany',
            type : 'GET',
            dataType: 'json',
            async: false,
            success: function(res) {
                if(res.status == 'Success'){
                    $.each(res.data, function(i, val) {
                        var slctd = "";
                        if (company2 == val.company_name) {slctd += "selected"};
                        company += '<option value="'+val.company_name+'" '+slctd+'>'+val.company_name+'</option> ';
                    });
                }
            }
        });
        bootbox.dialog({
                title: "Add Project",
                message: '<div class="row">  ' +
                '<div class="col-md-12">' +
                '<form action="#" id = "edit_project_form">' +
                '<div class="form-group">' +
                '<div class="row">' +
                '<div class="col-sm-12">' +
                '<label>What\'s the Project Name?</label>' +
                '<input type="text" placeholder="Project name" name = "project_name" value = "'+project_name+'"class="form-control">' +
                '</div>' +
                '</div>' +
                '</div>' +
                '<ul class="nav nav-lg nav-tabs nav-tabs-bottom nav-tabs-toolbar no-margin">'+
                '<li class="active"><a href="#ds" data-toggle="tab" aria-expanded="true">Description</a></li>'+
                '<li class=""><a href="#dt" data-toggle="tab" aria-expanded="false">Dates</a></li>'+
                '<li class=""><a href="#cp" data-toggle="tab" aria-expanded="false">Company</a></li>'+
                '</ul>'+
                '<div class="tab-content">'+
                '<div class="tab-pane fade active in" id="ds">'+
                '<div class="form-group"> '+
                '<label class = "mt-10">Provide a Description (Optional):</label> '+
                '<textarea rows="4" cols="5" name = "project_description" placeholder="Description..." class="form-control">'+description+'</textarea>'+
                '</div>'+
                '</div>'+
                '<div class="tab-pane fade" id="dt">'+
                '<label class = "mt-10">Project Dates (Optional)<br/><small class="text-muted">Adding a start and end date provides your team a useful way to see the duration of this project which helps with planning your tasks and milestones</small></label>'+
                '<div class="row"> '+
                '<div class="col-sm-6"> '+
                '<label>Start Date</label> '+
                '<div class="input-group"> '+
                '<span class="input-group-addon"><i class="icon-calendar22"></i></span> '+
                '<input type="text" class="form-control daterange-single" id = "start_date" name = "project_start_date" placeholder="Pick a date"> '+
                '<input type="hidden" name = "project_id" value="'+id_project+'"> '+
                '</div> '+
                '</div> '+
                '<div class="col-sm-6"> '+
                '<label>End Date</label> '+
                '<div class="input-group"> '+
                '<span class="input-group-addon"><i class="icon-calendar22"></i></span> '+
                '<input type="text" class="form-control daterange-single" id = "end_date" name = "project_end_date" value="" placeholder="Pick a date"> '+
                '</div> '+
                '</div> '+
                '</div> '+
                '</div>'+
                '<div class="tab-pane fade" id="cp">'+
                '<div class="form-group"> '+
                '<label class = "mt-10">This Project is for Company:</label> '+
                '<select id="country" name="project_company" data-placeholder="Select your company" class="select company"> '+
                '<option value="">No Company</option>'+
                company +
                '</select> '+
                '</div> '+
                '</div>'+
                '</div>'+
                '</form>' +
                '</div>' +
                '</div>',
                buttons: {
                    success: {
                        label: "Save",
                        className: "btn-success",
                        callback: function () {
                            var editProject = $('#edit_project_form');
                            var table1 = $('.datatable-projects-list').dataTable();
                            $.ajax({
                                url:  JS_BASE_URL +'/projects/editProject',
                                type : 'POST',
                                dataType: 'json',
                                data : editProject.serialize(),
                                success: function(res) {
                                    if(res.status == 'Success'){
                                        new PNotify({
                                            title: 'Success',
                                            text: 'Data has been saved',
                                            icon: 'icon-checkmark3',
                                            addclass: 'bg-success',
                                            delay: '3000'
                                        });

                                    table1.api().ajax.reload();
                                    }
                                }
                            });

                        }
                    }
                }
            }
        );

        $('.select').parents('.bootbox').removeAttr('tabindex');
        $('.select').select2();
        $("#select").select2("val", company2);

        // Single picker
        if(start_date != null){
            $('#start_date').daterangepicker({
                singleDatePicker: true,
                startDate: moment(start_date).format('DD-MM-YYYY'),
                locale: {
                    format: 'DD-MM-YYYY'
                },
            });
        } else {
            $('#start_date').daterangepicker({
                singleDatePicker: true,
                locale: {
                    format: 'DD-MM-YYYY'
                },
                autoUpdateInput :false
            }, function(startDate, label){
                $('#start_date').val(startDate.format('DD-MM-YYYY'));
            });
        }
        if(end_date != null){
            $('#end_date').daterangepicker({
                singleDatePicker: true,
                startDate: moment(end_date).format('DD-MM-YYYY'),
                locale: {
                    format: 'DD-MM-YYYY'
                },
            });
        } else {
            $('#end_date').daterangepicker({
                singleDatePicker: true,
                locale: {
                    format: 'DD-MM-YYYY'
                },
                autoUpdateInput :false
            }, function(startDate, label){
                $('#end_date').val(startDate.format('DD-MM-YYYY'));
            });
        }


    });
};

/*var Callback1 = function() {
    $('.action_approve').on('click',function(){
        var emp_requisition_id = $(this).attr('data-id');
        swal({
            title: "Are you sure?",
            text: "Are you sure you want to approve!",
            type: "warning",
            showCancelButton: true,
            confirmButtonColor: "#EF5350",
            confirmButtonText: "Yes, approve it!",
            cancelButtonText: "No, cancel pls!",
            closeOnConfirm: false,
            closeOnCancel: false
        },
        function(isConfirm){
            if (isConfirm) {
                var baseURL = window.location.protocol + '//' + window.location.hostname + '';
                var url = baseURL + "/selfservice/mss/approveEmpRequisition/" + emp_requisition_id ;
                $.ajax({
                    type: "GET",
                    url: url,
                    async: false,
                    dataType: "json",
                    success: function (result) {
                        if(result.status=='Success')
                        {
                            swal({
                                title: "Approved!",
                                text: "Your employee requisition has been approved.",
                                confirmButtonColor: "#66BB6A",
                                type: "success"
                            },
                            function(isConfirm){
                                location.reload();
                            }
                            );

                        }
                    }
                });

            }
            else {
                swal({
                    title: "Cancelled",
                    text: "cancel and not process anything.",
                    confirmButtonColor: "#2196F3",
                    type: "error"
                });
            }
        });
    });
    $('.action_reject').on('click', function() {
        var emp_requisition_id = $(this).attr('data-id');
        swal({
                title: "Reject!",
                text: "Write something that is the reason:",
                type: "input",
                showCancelButton: true,
                confirmButtonColor: "#2196F3",
                closeOnConfirm: false,
                animation: "slide-from-top",
                inputPlaceholder: "Write something"
            },
            function(inputValue){
                if (inputValue === false) return false;
                if (inputValue === "") {
                    swal.showInputError("You need to write something!");
                    return false
                }

                var baseURL = window.location.protocol + '//' + window.location.hostname + '';
                var url = baseURL + "/selfservice/mss/rejectEmpRequisition/";

                var data = { emp_requisition_id: emp_requisition_id, reason_status: inputValue };

                $.ajax({
                    type: "POST",
                    url: url,
                    data: data,
                    async: false,
                    dataType: "json",
                    success: function (result) {
                        if(result.status=='Success')
                        {
                            swal({
                                title: "Rejected!",
                                text: "You wrote: " + inputValue,
                                type: "success",
                                confirmButtonColor: "#2196F3"
                            },
                            function(isConfirm){
                                location.reload();
                            }
                            );
                        }
                    }
                });
            });
    });
    $('.action_cancel').on('click', function() {
        var emp_requisition_id = $(this).attr('data-id');
        swal({
                title: "Cancel!",
                text: "Write something that is the reason:",
                type: "input",
                showCancelButton: true,
                confirmButtonColor: "#2196F3",
                closeOnConfirm: false,
                animation: "slide-from-top",
                inputPlaceholder: "Write something"
            },
            function(inputValue){
                if (inputValue === false) return false;
                if (inputValue === "") {
                    swal.showInputError("You need to write something!");
                    return false
                }
                
                var baseURL = window.location.protocol + '//' + window.location.hostname + '';
                var url = baseURL + "/selfservice/mss/cancelEmpRequisition/";

                var data = { emp_requisition_id: emp_requisition_id, reason_status: inputValue };

                $.ajax({
                    type: "POST",
                    url: url,
                    data: data,
                    async: false,
                    dataType: "json",
                    success: function (result) {
                        if(result.status=='Success')
                        {
                            swal({
                                title: "Cancelled!",
                                text: "You wrote: " + inputValue,
                                type: "success",
                                confirmButtonColor: "#2196F3"
                            },
                            function(isConfirm){
                                location.reload();
                            });
                        }
                    }
                });


            });
    });
    $('.status').on('click', function(){
        var emp_req = $(this).attr('emp-req');
        $.ajax({
            url:  JS_BASE_URL +'mss/getEmpRequisitionStatus',
            type : 'POST',
            dataType: 'json',
            data: { emp_requisition_id:emp_req },
            success: function(res) {
                if(res.status == 'Success'){
                    $('#modal_theme_primary').modal('show');
                    $('.modal-title').html('Approval History');
                    var row = '';
                    $.each( res.data, function( key, value ) {
                        row += '<tr>'+
                            '<td>'+value.status+'</td>'+
                            '<td>'+value.user_employee.substr(14)+'</td>'+
                            '<td>'+moment(value.created_date).format('ddd, DD MMM YYYY hh:mm A');+'</td>'+
                        '</tr>';
                    });
                    $('#history').find('tbody').html(row);
                }
            }
        });
    });
};

var callBack2 = function() {
    $('.iu').on('click', function(){
        var emp_req = $(this).attr('emp_req');
        var candidate_id = $(this).attr('candidate_id');
        var candidate_name = $(this).attr('candidate_name');
        $.ajax({
            url:  JS_BASE_URL +'interview/getResult',
            type : 'POST',
            dataType: 'json',
            data: { candidate_id : candidate_id, emp_requisition_id:emp_req },
            success: function(res) {
                if(res.status == 'Success'){
                    $('#modal_theme_primary').modal('show');
                    $('.modal-title').html('Interview Result - '+candidate_name);
                    var row = '';
                    $.each( res.data, function( key, value ) {
                        row += '<tr>'+
                            '<td>'+value.result_by_user+'</td>'+
                            '<td>'+value.employee_name+'</td>'+
                            '<td>'+moment(value.created_date).format('ddd, DD MMM YYYY');+'</td>'+
                        '</tr>';
                    });
                    $('#history').find('tbody').html(row);
                    $('#head').html('Result');
                    $('#information').hide();
                }
            }
        });
    });
    $('.ps').on('click', function(){
        var candidate_id = $(this).attr('candidate_id');
        var candidate_name = $(this).attr('candidate_name');
        $.ajax({
            url:  JS_BASE_URL +'psychotest/getResult/'+ candidate_id,
            type : 'GET',
            dataType: 'json',
            success: function(res) {
                if(res.status == 'Success'){
                    if(res.data.recommendation_user == null || res.data.recommendation_user == ''){
                        res.data.recommendation_user = '-';
                    }
                    if(res.data.updater == null || res.data.updater == ''){
                        res.data.updater = '-';
                    }
                    if(res.data.last_updated_date == null || res.data.last_updated_date == ''){
                        res.data.last_updated_date = '-';
                    } else{
                        res.data.last_updated_date = moment(res.data.last_updated_date).format('ddd, DD MMM YYYY');
                    }
                    $('#modal_theme_primary').modal('show');
                    $('.modal-title').html('Psychotest Recommendation - '+candidate_name);
                    var info = '<p>Result uploaded by <b>'+res.data.employee_name+'</b> on '+moment(res.data.created_date).format('ddd, DD MMM YYYY h:mm A')+'</p>'
                    var row = '';
                    row += '<tr>'+
                        '<td>'+res.data.recommendation_user+'</td>'+
                        '<td>'+res.data.updater+'</td>'+
                        '<td>'+res.data.last_updated_date+'</td>'+
                        '</tr>';
                    $('#history').find('tbody').html(row);
                    $('#head').html('Recommendation');
                    $('#information').show();
                    $('#information').html(info);
                }
            }
        });
    });
    $('.candidate_history').on('click', function(){
        var candidate_id = $(this).attr('candidate_id');
        var emp_requisition_id = $(this).attr('emp_req');
        var candidate_name = $(this).attr('candidate_name');
        $.ajax({
            url:  JS_BASE_URL +'mss/getCandidateHistory',
            type : 'POST',
            dataType: 'json',
            data: { emp_requisition_id:emp_requisition_id, candidate_id : candidate_id },
            success: function(res) {
                if(res.status == 'Success'){
                    $('#modal_theme_primary').modal('show');
                    $('.modal-title').html('Candidate History - '+candidate_name);
                    var row = '';
                    $.each( res.data, function( key, value ) {
                        row += '<tr>'+
                            '<td>'+value.activity+'</td>'+
                            '<td>'+value.user_employee.substr(14)+'</td>'+
                            '<td>'+moment(value.status_date).format('ddd, DD MMM YYYY');+'</td>'+
                        '</tr>';
                    });
                    $('#history').find('tbody').html(row);
                    $('#head').html('Action');
                    $('#information').hide();
                }
            }
        });
    });
};

var Callback3 = function() {
    $('.status').on('click', function(){
        var emp_req = $(this).attr('emp-req');
        $.ajax({
            url:  JS_BASE_URL +'mss/getEmpRequisitionStatus',
            type : 'POST',
            dataType: 'json',
            data: { emp_requisition_id:emp_req },
            success: function(res) {
                if(res.status == 'Success'){
                    $('#modal_theme_primary').modal('show');
                    $('.modal-title').html('Approval History');
                    var row = '';
                    $.each( res.data, function( key, value ) {
                        row += '<tr>'+
                            '<td>'+value.status+'</td>'+
                            '<td>'+value.user_employee.substr(14)+'</td>'+
                            '<td>'+moment(value.created_date).format('ddd, DD MMM YYYY hh:mm A');+'</td>'+
                        '</tr>';
                    });
                    $('#history').find('tbody').html(row);
                }
            }
        });
    });
};

var CallbackTravelReqApproval = function() {
    $('.prompt_travel_req_approval').on('click', function() {
        var travel_req_id = $(this).attr('data-id');
        swal({
                title: "Are you sure?",
                text: "Are you sure you want to approve!",
                type: "warning",
                showCancelButton: true,
                confirmButtonColor: "#EF5350",
                confirmButtonText: "Yes, approve it!",
                cancelButtonText: "No, cancel pls!",
                closeOnConfirm: false,
                closeOnCancel: false,
                showLoaderOnConfirm: true
            },
            function(isConfirm){
                if (isConfirm) {

                    setTimeout(function() {

                        var baseURL = window.location.protocol + '//' + window.location.hostname + '';
                        var url = baseURL + "/selfservice/mss/approveTravelRequest/" + travel_req_id;

                        $.ajax({
                            type: "GET",
                            url: url,
                            async: false,
                            dataType: "json",
                            success: function (result) {
                                if(result.status=='Success')
                                {
                                    swal({
                                        title: "Approved!",
                                        text: "Your travel request has been approved.",
                                        confirmButtonColor: "#66BB6A",
                                        type: "success"
                                    },
                                    function(isConfirm){
                                        location.reload();
                                    });
                                }
                            }
                        });

                    }, 2000);

                }
                else {
                    swal({
                        title: "Cancelled",
                        text: "cancel and not process anything.",
                        confirmButtonColor: "#2196F3",
                        type: "error"
                    });
                }
            });
    });
    $('.prompt_travel_req_reject').on('click', function() {
        var travel_req_id = $(this).attr('data-id');
        swal({
                title: "Reject!",
                text: "Write something that is the reason:",
                type: "input",
                showCancelButton: true,
                confirmButtonColor: "#2196F3",
                closeOnConfirm: false,
                animation: "slide-from-top",
                inputPlaceholder: "Write something"
            },
            function(inputValue){
                if (inputValue === false) return false;
                if (inputValue === "") {
                    swal.showInputError("You need to write something!");
                    return false
                }

                var baseURL = window.location.protocol + '//' + window.location.hostname + '';
                var url = baseURL + "/selfservice/mss/rejectTravelRequest/";

                var data = { travel_req_id: travel_req_id, reason_status: inputValue };

                $.ajax({
                    type: "POST",
                    url: url,
                    data: data,
                    async: false,
                    dataType: "json",
                    success: function (result) {
                        if(result.status=='Success')
                        {
                            swal({
                                title: "Rejected!",
                                text: "You wrote: " + inputValue,
                                type: "success",
                                confirmButtonColor: "#2196F3"
                            },
                            function(isConfirm){
                                location.reload();
                            });
                        }
                    }
                });


            });
    });
    $('.prompt_travel_req_cancel').on('click', function() {
        var travel_req_id = $(this).attr('data-id');
        swal({
                title: "Cancel!",
                text: "Write something that is the reason:",
                type: "input",
                showCancelButton: true,
                confirmButtonColor: "#2196F3",
                closeOnConfirm: false,
                animation: "slide-from-top",
                inputPlaceholder: "Write something"
            },
            function(inputValue){
                if (inputValue === false) return false;
                if (inputValue === "") {
                    swal.showInputError("You need to write something!");
                    return false
                }

                var baseURL = window.location.protocol + '//' + window.location.hostname + '';
                var url = baseURL + "/selfservice/mss/cancelTravelRequest/";

                var data = { travel_req_id: travel_req_id, reason_status: inputValue };

                $.ajax({
                    type: "POST",
                    url: url,
                    data: data,
                    async: false,
                    dataType: "json",
                    success: function (result) {
                        if(result.status=='Success')
                        {
                            swal({
                                title: "Cancelled!",
                                text: "You wrote: " + inputValue,
                                type: "success",
                                confirmButtonColor: "#2196F3"
                            },
                            function(isConfirm){
                                location.reload();
                            });
                        }
                    }
                });


            });
    });
};

var CallbackTravelClaimApproval = function() {
    $('.prompt_travel_claim_approval').on('click', function() {
        var travel_req_id = $(this).attr('data-id');
        var travel_claim_id = $(this).attr('data-claim-id');
        swal({
                title: "Are you sure?",
                text: "Are you sure you want to approve!",
                type: "warning",
                showCancelButton: true,
                confirmButtonColor: "#EF5350",
                confirmButtonText: "Yes, approve it!",
                cancelButtonText: "No, cancel pls!",
                closeOnConfirm: false,
                closeOnCancel: false,
                showLoaderOnConfirm: true
            },
            function(isConfirm){
                if (isConfirm) {

                    setTimeout(function() {

                        var baseURL = window.location.protocol + '//' + window.location.hostname + '';
                        var url = baseURL + "/selfservice/mss/approveTravelClaim/" + travel_req_id + "/" + travel_claim_id;

                        $.ajax({
                            type: "GET",
                            url: url,
                            async: false,
                            dataType: "json",
                            success: function (result) {
                                if(result.status=='Success')
                                {
                                    swal({
                                        title: "Approved!",
                                        text: "Your travel request has been approved.",
                                        confirmButtonColor: "#66BB6A",
                                        type: "success"
                                    },
                                    function(isConfirm){
                                        location.reload();
                                    });
                                }
                            }
                        });

                    }, 2000);

                }
                else {
                    swal({
                        title: "Cancelled",
                        text: "cancel and not process anything.",
                        confirmButtonColor: "#2196F3",
                        type: "error"
                    });
                }
            });
    });
    $('.prompt_travel_claim_reject').on('click', function() {
        var travel_req_id = $(this).attr('data-id');
        var travel_claim_id = $(this).attr('data-claim-id');
        swal({
                title: "Reject!",
                text: "Write something that is the reason:",
                type: "input",
                showCancelButton: true,
                confirmButtonColor: "#2196F3",
                closeOnConfirm: false,
                animation: "slide-from-top",
                inputPlaceholder: "Write something"
            },
            function(inputValue){
                if (inputValue === false) return false;
                if (inputValue === "") {
                    swal.showInputError("You need to write something!");
                    return false
                }

                var baseURL = window.location.protocol + '//' + window.location.hostname + '';
                var url = baseURL + "/selfservice/mss/rejectTravelClaim/";

                var data = { travel_req_id: travel_req_id, travel_claim_id: travel_claim_id, reason_status: inputValue };

                $.ajax({
                    type: "POST",
                    url: url,
                    data: data,
                    async: false,
                    dataType: "json",
                    success: function (result) {
                        if(result.status=='Success')
                        {
                            swal({
                                title: "Rejected!",
                                text: "You wrote: " + inputValue,
                                type: "success",
                                confirmButtonColor: "#2196F3"
                            },
                            function(isConfirm){
                                location.reload();
                            });
                        }
                    }
                });


            });
    });
    $('.prompt_travel_claim_cancel').on('click', function() {
        var travel_req_id = $(this).attr('data-id');
        var travel_claim_id = $(this).attr('data-claim-id');
        swal({
                title: "Cancel!",
                text: "Write something that is the reason:",
                type: "input",
                showCancelButton: true,
                confirmButtonColor: "#2196F3",
                closeOnConfirm: false,
                animation: "slide-from-top",
                inputPlaceholder: "Write something"
            },
            function(inputValue){
                if (inputValue === false) return false;
                if (inputValue === "") {
                    swal.showInputError("You need to write something!");
                    return false
                }

                var baseURL = window.location.protocol + '//' + window.location.hostname + '';
                var url = baseURL + "/selfservice/mss/cancelTravelClaim/";

                var data = { travel_req_id: travel_req_id, travel_claim_id: travel_claim_id, reason_status: inputValue };

                $.ajax({
                    type: "POST",
                    url: url,
                    data: data,
                    async: false,
                    dataType: "json",
                    success: function (result) {
                        if(result.status=='Success')
                        {
                            swal({
                                title: "Cancelled!",
                                text: "You wrote: " + inputValue,
                                type: "success",
                                confirmButtonColor: "#2196F3"
                            },
                            function(isConfirm){
                                location.reload();
                            });
                        }
                    }
                });


            });
    });
};*/