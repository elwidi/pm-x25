<?php

class IssueRisk_model extends CI_Model {

    public function __construct()
    {
        parent::__construct();
    }

    public function setUserId()
    {
        $cookie = base64_decode($_COOKIE['SSOID']);
        $crop = explode('+', $cookie);
        return $crop[0];
    }

    public function getIssueRiskDetail($id){
        $this->db->select('a.*, b.project_name, c.fullname as pm_name, d.fullname as pic_name,e.fullname as raised_by');
        $this->db->from('pm_issue_risk_register a');
        $this->db->join('pm_projects b','a.projects_id = b.id','left');
        $this->db->join('pm_user c','a.pm_id = c.user_id','left');
        $this->db->join('pm_user d','a.pic_id = d.user_id','left');
        $this->db->join('pm_user e','a.created_by = e.sso_id','left');
        $this->db->where('a.id', $id);
        $query = $this->db->get();
        $tools = $query->row();
        return $tools;
    }

    private function _get_datatable_issueRisk_query()
    {
       /* $column_search = array("tools_id", "description", "pr_number", "po_number");
        $column_order = array("tools_id", "description", "pr_number", "pr_date", "po_number", "po_date");*/
        $this->db->select('b.project_name, a.*');
        $this->db->from('pm_issue_risk_register a');
        $this->db->join('pm_projects b','a.projects_id = b.id');

        $i = 0;
        /*foreach ($column_search as $item) // loop column
        {
            if($_POST['search']['value']) // if datatable send POST for search
            {
                if($i===0) // first loop
                {
                    $this->db->like($item, $_POST['search']['value']);
                }
                else
                {
                    $this->db->or_like($item, $_POST['search']['value']);
                }
            }
            $i++;
        }

        if(isset($_POST['order'])) // here order processing
        {
            $this->db->order_by($column_order[$_POST['order']['0']['column']], $_POST['order']['0']['dir']);
        }*/

    }

    function get_datatable_issueRisk()
    {
        $this->_get_datatable_issueRisk_query();
        if($_POST['length'] != -1)
            $this->db->limit($_POST['length'], $_POST['start']);
        $query = $this->db->get();
        return $query->result();
    }

    function count_filtered_issueRisk()
    {
        $this->_get_datatable_issueRisk_query();
        $query = $this->db->get();
        return $query->num_rows();
    }

    public function count_all_issueRisk()
    {
        $this->db->from("pm_issue_risk_register");
        return $this->db->count_all_results();
    }

    public function getMaxId(){
        $query = $this->db->query("SELECT MAX(id) AS issue_id FROM pm_issue_risk_register");
        return $query->row();
    }

    public function saveNewIssueRisk($attc = ""){
        /**
         * ===================================================
         * Transactions with databases
         * ===================================================
         */
        $this->db->trans_begin();

        /*$raised_date = null;
        $current_response_date = null;
        $further_action_date = null;

        if(!empty($raised_date)){
            $raised_date = date('Y-m-d H:i:s', strtotime($this->input->post('raised_date')));
        }
        
        if(!empty($current_response_date)){
            $current_response_date = ;
        }

        if(!empty($further_action_date)){
            $further_action_date = date('Y-m-d', strtotime($this->input->post('further_action_date')));
        }*/

        $data = array(
            'projects_id' => $this->input->post('project_id'),
            'issue_no' => $this->input->post('no_issue'),
            'issue_risk' => $this->input->post('issue_risk'),
            'type_of_issue_risk' => $this->input->post('type_of_issue_risk'),
            'raised_date' => date('Y-m-d', strtotime($this->input->post('raised_date'))),
            'project_scope' => $this->input->post('project_scope'),
            'pm_id' => $this->input->post('project_manager'),
            'pic_id' => $this->input->post('pic'),
            'target_to_close' => date('Y-m-d', strtotime($this->input->post('target_to_close'))),
            'status' => $this->input->post('status'),
            'potential_impact' => $this->input->post('potential_impact'),
            'issue_or_risk' => $this->input->post('issue_or_risk'),
            'issue_only' => $this->input->post('issue_only'),
            'risk_only_probability' => $this->input->post('risk_only_probability'),
            'risk_only_impact' => $this->input->post('risk_only_impact'),
            'risk_only_significance' => $this->input->post('risk_only_impact'),
            'current_response' => $this->input->post('current_response'),
            'current_response_date' => date('Y-m-d', strtotime($this->input->post('current_response_date'))),
            'further_action' => $this->input->post('further_action'),
            'further_action_date' => date('Y-m-d', strtotime($this->input->post('further_action_date'))),
            'file_attachment' => $attc,
            'created_date' => date('Y-m-d H:i:s'),
            'created_by' => $this->setUserId(),
        );

        $this->db->insert('pm_issue_risk_register', $data);

        /**
         * ===================================================
         * Transactions with databases
         * ===================================================
         */
        if ($this->db->trans_status() === FALSE)
        {
            $this->db->trans_rollback();
        }
        else
        {
            $this->db->trans_commit();
        }

        return true;
    }

    public function updateIssueRisk($attc = ""){
        /**
         * ===================================================
         * Transactions with databases
         * ===================================================
         */
        $this->db->trans_begin();

        $raised_date = $this->input->post('raised_date');
        $current_response_date = $this->input->post('current_response_date');
        $further_action_date = $this->input->post('further_action_date');

        if(!empty($raised_date)){
            $raised_date = date('Y-m-d H:i:s', strtotime($this->input->post('raised_date')));
        }
        
        if(!empty($current_response_date)){
            $current_response_date = date('Y-m-d H:i:s', strtotime($this->input->post('current_response_date')));
        }

        if(!empty($further_action_date)){
            $further_action_date = date('Y-m-d H:i:s', strtotime($this->input->post('further_action_date')));
        }

        $issueId = $this->input->post('issue_id');

        if(!empty($attc)){
            $data = array(
                'issue_no' => $this->input->post('no_issue'),
                'projects_id' => $this->input->post('project_id'),
                'issue_risk' => $this->input->post('issue_risk'),
                'type_of_issue_risk' => $this->input->post('type_of_issue_risk'),
                'raised_date' => $raised_date,
                'status' => $this->input->post('status'),
                'potential_impact' => $this->input->post('potential_impact'),
                'issue_or_risk' => $this->input->post('issue_or_risk'),
                'project_scope' => $this->input->post('project_scope'),
                'pm_id' => $this->input->post('project_manager'),
                'pic_id' => $this->input->post('pic'),
                'target_to_close' => date('Y-m-d', strtotime($this->input->post('target_to_close'))),
                'issue_only' => $this->input->post('issue_only'),
                'risk_only_probability' => $this->input->post('risk_only_probability'),
                'risk_only_impact' => $this->input->post('risk_only_impact'),
                'risk_only_significance' => $this->input->post('risk_only_impact'),
                'current_response' => $this->input->post('current_response'),
                'current_response_date' => $this->input->post('current_response_date'),
                'further_action' => $this->input->post('further_action'),
                'further_action_date' => $this->input->post('further_action_date'),
                'file_attachment' => $attc,
                'created_date' => date('Y-m-d H:i:s'),
                'created_by' => $this->setUserId(),
            );
        } else {
            $data = array(
                'issue_no' => $this->input->post('no_issue'),
                'projects_id' => $this->input->post('project_id'),
                'issue_risk' => $this->input->post('issue_risk'),
                'type_of_issue_risk' => $this->input->post('type_of_issue_risk'),
                'raised_date' => $raised_date,
                'project_scope' => $this->input->post('project_scope'),
                'status' => $this->input->post('status'),
                'pm_id' => $this->input->post('project_manager'),
                'pic_id' => $this->input->post('pic'),
                'target_to_close' => date('Y-m-d', strtotime($this->input->post('target_to_close'))),
                'potential_impact' => $this->input->post('potential_impact'),
                'issue_or_risk' => $this->input->post('issue_or_risk'),
                'issue_only' => $this->input->post('issue_only'),
                'risk_only_probability' => $this->input->post('risk_only_probability'),
                'risk_only_impact' => $this->input->post('risk_only_impact'),
                'risk_only_significance' => $this->input->post('risk_only_impact'),
                'current_response' => $this->input->post('current_response'),
                'current_response_date' => $this->input->post('current_response_date'),
                'further_action' => $this->input->post('further_action'),
                'last_updated_date' => date('Y-m-d H:i:s'),
                'last_updated_by' => $this->setUserId(),
            );
        }

        
        $this->db->where('id', $issueId);
        $this->db->update('pm_issue_risk_register', $data);

        /**
         * ===================================================
         * Transactions with databases
         * ===================================================
         */
        if ($this->db->trans_status() === FALSE)
        {
            $this->db->trans_rollback();
        }
        else
        {
            $this->db->trans_commit();
        }

        return true;
    }

    public function deleteIssueRisk($id)
    {
        $this->db->delete('pm_issue_risk_register', array('id' => $id));
        return true; 
    }


    public function saveFollowUp($attc = ""){

        /**
         * ===================================================
         * Transactions with databases
         * ===================================================
         */
        $this->db->trans_begin();

        $issueId = $this->input->post('for_issue');
        $follow_up = $this->input->post('follow_up');
        $deleted = explode(",", $this->input->post('deleted_follow_up'));
        

        foreach ($deleted as $k => $v) {
            $this->db->delete('pm_issue_follow_up', array('id' => $v));
        }

        foreach ($follow_up as $key => $value) {
            $date = $value['date'];
            if(!empty($date)){
                $date = date('Y-m-d', strtotime($date));
            }else {
                $date = null;
            }

            if(empty($attc)){
                $fl = null;
            } else {
                $fl = $attc[$key];
            }

            if(!empty($value['desription']) || $value['description'] != ""){
                $data = array(
                    'issue_id' => $issueId,
                    'follow_up_date' => $date,
                    'follow_up_description' => $value['description'],
                    'file_attachment' => $fl,
                    'created_date' => date('Y-m-d H:i:s'),
                    'created_by' => $this->setUserId(),
                );
                // var_dump($data);
                $this->db->insert('pm_issue_follow_up', $data);
            }
        }


        // exit();

        
        /**
         * ===================================================
         * Transactions with databases
         * ===================================================
         */
        if ($this->db->trans_status() === FALSE)
        {
            $this->db->trans_rollback();
        }
        else
        {
            $this->db->trans_commit();
        }

        return true;
    }

    public function getFollowUp($id){
        $this->db->select('*');
        $this->db->from('pm_issue_follow_up');
        $this->db->where('issue_id', $id);
        $query = $this->db->get();
        $follow_up = $query->result();
        return $follow_up;
    }

    public function close($attc){
        $issueId = $this->input->post('for_issue');
        /*if(isset($attc['closing_attc'])){
            $closing_attc = $attc['closing_attc'];
            unset($attc['closing_attc']);
        }*/
        $data = array(
            'status' => 'closed',
            'closing_date' => date('Y-m-d', strtotime($this->input->post('closing_date'))),
            'closing_description' => $this->input->post('closing_desc'),
            'closing_attachment' => $attc
        );
        $this->db->where('id', $issueId);
        $this->db->update('pm_issue_risk_register', $data);

        return true;
    }

    public function generateIssueId($id){
        $this->db->select('project_id');
        $this->db->from('pm_projects');
        $this->db->where('id', $id);
        $query = $this->db->get();
        $project = $query->row();

        $next_id = $this->getMaxId();
        $issueId = "";

        if(strlen($next_id->issue_id)==1){
            $issueId='00000'.$next_id->issue_id+1;
        }else if(strlen($next_id->issue_id)==2){
            $issueId='0000'.$next_id->issue_id+1;
        }else if(strlen($next_id->issue_id)==3){
            $issueId='000'.$next_id->issue_id+1;
        }else if(strlen($next_id->issue_id)==4){
            $issueId='00'.$next_id->issue_id+1;
        }else if(strlen($next_id->issue_id)==5){
            $issueId='0'.$next_id->issue_id+1;
        }

        // var_dump($idNext); exit();

        $no_issue = $project->project_id."-01-".$issueId;

        return $no_issue;
    }
}