<?php
defined('BASEPATH') OR exit('No direct script access allowed');

include dirname(__FILE__).DIRECTORY_SEPARATOR.'SsoClient/ClientAPI.php';

class IssueRisk extends CI_Controller {

	/**
	 * Index Page for this controller.
	 *
	 * Maps to the following URL
	 * 		http://example.com/index.php/welcome
	 *	- or -
	 * 		http://example.com/index.php/welcome/index
	 *	- or -
	 * Since this controller is set as the default controller in
	 * config/routes.php, it's displayed at http://example.com/
	 *
	 * So any other public methods not prefixed with an underscore will
	 * map to /index.php/welcome/<method_name>
	 * @see https://codeigniter.com/user_guide/general/urls.html
	 */
	public function __construct()
	{
		parent::__construct();
		$this->load->model('IssueRisk_model', 'm_risk');
		$this->load->model('Planning_model', 'm_plan');

		//TODO: create an object and call a class method
		$ClientApi = new ClientAPI();
		$ClientApi->doCurl();
	}

	public function index()
	{
		// Get Apps Config
		$data = $this->apps->info();
		$data['page_title'] = '<span class="text-semibold">Issue & Risk</span>';
		$data['project'] = $this->m_plan->getProjects();

        /*if(!empty($_POST)){
            var_dump($this->input->post(null, true)); exit();
        }*/

        if($this->input->post('submit_form')){
            if(!empty($this->input->post('issue_id'))){
                if(!empty($_FILES['attach_doc']['name'])){
                    $upload = $this->uploadFile('attach_doc');
                    if(isset($upload['upload_data'])){
                        $attc = $upload['upload_data']['file_name'];
                        if($this->m_risk->updateIssueRisk($attc)){
                            $this->session->set_flashdata('message', 'Data has been saved');
                            redirect('issueRisk/');
                        }
                    }
                } else {
                    if($this->m_risk->updateIssueRisk($attc)){
                        $this->session->set_flashdata('message', 'Data has been saved');
                        redirect('issueRisk/');
                    }
                }
            } else {
                if(!empty($_FILES['attach_doc']['name'])){
                    $upload = $this->uploadFile('attach_doc');
                    if(isset($upload['upload_data'])){
                        $attc = $upload['upload_data']['file_name'];
                        if($this->m_risk->saveNewIssueRisk($attc)){
                            $this->session->set_flashdata('message', 'Data has been saved');
                            redirect('issueRisk/');
                        }
                    }
                } else {
                    if($this->m_risk->saveNewIssueRisk($attc)){
                        $this->session->set_flashdata('message', 'Data has been saved');
                        redirect('issueRisk/');
                    }
                }
            }
            
        }

		$this->load->view('issue_risk/list_issue_risk_register', $data);
	}

    public function updateFollowUp(){
        $ind ='attachment'.$this->input->post('idx');
        $attachment = array();
        if($this->input->post('submit_followup')){
            if(!empty($_FILES[$ind]['name'])){
                foreach($_FILES as $key => $value){
                    $upload = $this->uploadFile($key);
                    if(isset($upload['upload_data'])){
                        $attc = $upload['upload_data']['file_name'];
                        $idx = str_replace("attachment", "", $key);
                        $attachment[$idx] = $attc;
                    }
                }

                if($this->m_risk->saveFollowUp($attachment)){
                    $this->session->set_flashdata('message', 'Data has been saved');
                    redirect('issueRisk/');
                }
            } else {
                if($this->m_risk->saveFollowUp()){
                    $this->session->set_flashdata('message', 'Data has been saved');
                    redirect('issueRisk/');
                }
            }
        }
    }

    public function detail($id)
    {
        $issueRisk = $this->m_risk->getIssueRiskDetail($id);
        if (!empty($issueRisk)) {
            $data = array('status' => 'Success', 'data' => $issueRisk);
        } else {
            $data = array('status' => 'Failed', 'data' => '');
        }
        echo json_encode($data);
        exit();
    }

    public function create()
    {
        // var_dump($_FILES); exit;
        if ($this->m_risk->saveNewIssueRisk()) {
            $data = array('status' => 'Success');
        } else {
            $data = array('status' => 'Failed');
        }

        echo json_encode($data);
        exit();
    }


    public function update()
    {
        if ($this->m_risk->updateIssueRisk()) {
            $data = array('status' => 'Success');
        } else {
            $data = array('status' => 'Failed');
        }

        echo json_encode($data);
        exit();
    }

    public function followUp($id){
        $followUp = $this->m_risk->getFollowUp($id);
        if (!empty($followUp)) {
            $data = array('status' => 'Success', 'data' => $followUp);
        } else {
            $data = array('status' => 'Failed', 'data' => '');
        }
        echo json_encode($data);
        exit();
    }

	public function datatableIssueRisk()
    {
        $list = $this->m_risk->get_datatable_issueRisk();
        $data = array();
        $no = $_POST['start'];
        foreach ($list as $mta) {
            $no++;
            $row = array();
            $row['no'] = $no;
            $row['closable'] = 0;
            $follow_up = $this->m_risk->getFollowUp($mta->id);
            if(!empty($follow_up)){
                $row['closable'] = 1;
            }
            foreach ($mta as $key => $value) {
                if (empty($value)){
                    $value = "";
                }
                $row[$key] = $value;

            }
            $data[] = $row;
        }

        $output = array(
            "draw" => $_POST['draw'],
            "recordsTotal" => $this->m_risk->count_filtered_issueRisk(),
            "recordsFiltered" => $this->m_risk->count_all_issueRisk(),
            "data" => $data,
        );
        echo json_encode($output); exit;
    }

    public function delete()
    {
        $issueId = $this->input->post('id');
        if ($this->m_risk->deleteIssueRisk($issueId)) {
            $data = array('status' => 'Success');
        } else {
            $data = array('status' => 'Failed');
        }

        echo json_encode($data);
        exit();
    }

    public function close()
    {
        $issueId = $this->input->post('issue');
        if ($this->m_risk->close($issueId)) {
            $data = array('status' => 'Success');
        } else {
            $data = array('status' => 'Failed');
        }

        echo json_encode($data);
        exit();
    }

    public function uploadFile($input){
        // $config['upload_path'] = '/var/www/project.apps.moratelindo.co.id/public_html/assets/file/issue_risk/';
        $config['upload_path'] = 'assets/file/issue_risk/';

        $config['allowed_types'] = '*';

        //not overwrite if same file name exist, add index instead.
        $config['overwrite'] = false;

        //max size file
        $config['max_size'] = 5*1024;

        //call upload lib
        $this->load->library('upload', $config);

        //do upload action
        if (!$this->upload->do_upload($input)){
            $returns = array('error' => $this->upload->display_errors());
        }else{
            $returns = array('upload_data' => $this->upload->data());
        }
        return $returns;
    }

    public function generateId(){
        $id = $this->input->post('project_id');
        $issueNo = $this->m_risk->generateIssueId($id);

        if (!empty($issueNo)) {
            $data = array('status' => 'Success', 'data' => $issueNo);
        } else {
            $data = array('status' => 'Failed', 'data' => '');
        }
        echo json_encode($data);
        exit();
    }


}
