
<?php

class Resource_model extends CI_Model {

    public function __construct()
    {
        parent::__construct();
    }

    public function setUserId()
    {
        $cookie = base64_decode($_COOKIE['SSOID']);
        $crop = explode('+', $cookie);
        return $crop[0];
    }

    public function getResourceDetail($id){
        $this->db->select('a.*, b.*');
        $this->db->from('pm_resources a');
        $this->db->join('pm_user b','a.user_id = b.user_id');
        $this->db->where('a.id', $id);
        $query = $this->db->get();
        $user = $query->row();
        return $user;
    }

    public function saveNewResource(){
//        var_dump($this->input->post(null, true)); exit;
        /**
         * ===================================================
         * Transactions with databases
         * ===================================================
         */
        $this->db->trans_begin();
        // var_dump($this->input->post(null, true)); exit();
        // $employee_id = $this->setUserId();

        $data = array(
            'user_id' => $this->input->post('user_id'),
            'title' => $this->input->post('title'),
            'join_date' => date("Y-m-d",strtotime($this->input->post('join_date'))),
            'work_location' => $this->input->post('work_location'),
            'created_date' => date('Y-m-d H:i:s'),
            'created_by' => $this->setUserId()
        );
        $this->db->insert('pm_resources', $data);

        /**
         * ===================================================
         * Transactions with databases
         * ===================================================
         */
        if ($this->db->trans_status() === FALSE)
        {
            $this->db->trans_rollback();
        }
        else
        {
            $this->db->trans_commit();
        }

        return true;
    }

    public function updateResource($id){
        /**
         * ===================================================
         * Transactions with databases
         * ===================================================
         */
        $this->db->trans_begin();
        // var_dump($this->input->post(null, true)); exit();
        // $employee_id = $this->setUserId();

        $data = array(
            'user_id' => $this->input->post('user_id'),
            'title' => $this->input->post('title'),
            'join_date' => date("Y-m-d",strtotime($this->input->post('join_date'))),
            'work_location' => $this->input->post('work_location'),
        );
        $this->db->where('id', $id);
        $this->db->update('pm_resources', $data);

        /**
         * ===================================================
         * Transactions with databases
         * ===================================================
         */
        if ($this->db->trans_status() === FALSE)
        {
            $this->db->trans_rollback();
        }
        else
        {
            $this->db->trans_commit();
        }

        return true;
    }

    private function _get_datatable_resource_query()
    {
        $column_select = array("a.*", "b.*");
        $column_search = array("b.fullname", "a.title","a.work_location");
        $column_order = array("b.fullname", "a.title","a.join_date","a.work_location");
        $this->db->select($column_select);
        $this->db->from('pm_resources a');
        $this->db->join('pm_user b', 'a.user_id = b.user_id');

        $i = 0;
        foreach ($column_search as $item) // loop column
        {
            if($_POST['search']['value']) // if datatable send POST for search
            {
                    if($i===0) // first loop
                    {
                        $this->db->like($item, $_POST['search']['value']);
                    }
                    else
                    {
                        $this->db->or_like($item, $_POST['search']['value']);
                    }
            }
            $i++;
        }

        if(isset($_POST['order'])) // here order processing
        {
            $this->db->order_by($column_order[$_POST['order']['0']['column']], $_POST['order']['0']['dir']);
        }

    }

    function get_datatable_resource()
    {
        $this->_get_datatable_resource_query();
        if($_POST['length'] != -1)
            $this->db->limit($_POST['length'], $_POST['start']);
        $query = $this->db->get();
        return $query->result();
    }

    function count_filtered_resource()
    {
        $this->_get_datatable_resource_query();
        $query = $this->db->get();
        return $query->num_rows();
    }

    public function count_all_resource()
    {
        $this->db->from("pm_resources");
        return $this->db->count_all_results();
    }



} 